"use strict";(self.webpackChunkthe_publisher_ad_tag=self.webpackChunkthe_publisher_ad_tag||[]).push([[248],{3905:(e,t,l)=>{l.d(t,{Zo:()=>p,kt:()=>m});var a=l(7294);function n(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function i(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,a)}return l}function r(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?i(Object(l),!0).forEach((function(t){n(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):i(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function o(e,t){if(null==e)return{};var l,a,n=function(e,t){if(null==e)return{};var l,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)l=i[a],t.indexOf(l)>=0||(n[l]=e[l]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)l=i[a],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(n[l]=e[l])}return n}var d=a.createContext({}),s=function(e){var t=a.useContext(d),l=t;return e&&(l="function"==typeof e?e(t):r(r({},t),e)),l},p=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var l=e.components,n=e.mdxType,i=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(l),m=n,u=c["".concat(d,".").concat(m)]||c[m]||k[m]||i;return l?a.createElement(u,r(r({ref:t},p),{},{components:l})):a.createElement(u,r({ref:t},p))}));function m(e,t){var l=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=l.length,r=new Array(i);r[0]=c;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:n,r[1]=o;for(var s=2;s<i;s++)r[s]=l[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,l)}c.displayName="MDXCreateElement"},694:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>k,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=l(7462),n=(l(7294),l(3905));const i={id:"blocklist_urls",title:"Module: blocklist-urls",sidebar_label:"blocklist-urls",sidebar_position:0,custom_edit_url:null},r="Blocklist URLs",o={unversionedId:"modules/modules/blocklist_urls",id:"modules/modules/blocklist_urls",title:"Module: blocklist-urls",description:"This module adds configureStep or prepareRequestAds steps to the ad pipeline in order to prevent ad requests entirely",source:"@site/docs/modules/modules/blocklist_urls.md",sourceDirName:"modules/modules",slug:"/modules/modules/blocklist_urls",permalink:"/moli-ad-tag/docs/modules/modules/blocklist_urls",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"blocklist_urls",title:"Module: blocklist-urls",sidebar_label:"blocklist-urls",sidebar_position:0,custom_edit_url:null},sidebar:"Modules",previous:{title:"adex",permalink:"/moli-ad-tag/docs/modules/modules/adex"},next:{title:"confiant",permalink:"/moli-ad-tag/docs/modules/modules/confiant"}},d={},s=[{value:"Integration",id:"integration",level:2},{value:"Blocklist format",id:"blocklist-format",level:3},{value:"Examples",id:"examples",level:3},{value:"Classes",id:"classes",level:2},{value:"Type Aliases",id:"type-aliases",level:2},{value:"Blocklist",id:"blocklist",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"BlocklistEntry",id:"blocklistentry",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"BlocklistProvider",id:"blocklistprovider",level:3},{value:"BlocklistUrlsBlockingConfig",id:"blocklisturlsblockingconfig",level:3},{value:"Type declaration",id:"type-declaration-2",level:4},{value:"BlocklistUrlsConfig",id:"blocklisturlsconfig",level:3},{value:"BlocklistUrlsKeyValueConfig",id:"blocklisturlskeyvalueconfig",level:3},{value:"Type declaration",id:"type-declaration-3",level:4},{value:"DynamicBlocklistProvider",id:"dynamicblocklistprovider",level:3},{value:"Type declaration",id:"type-declaration-4",level:4},{value:"StaticBlocklistProvider",id:"staticblocklistprovider",level:3},{value:"Type declaration",id:"type-declaration-5",level:4}],p={toc:s};function k(e){let{components:t,...l}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"blocklist-urls"},"Blocklist URLs"),(0,n.kt)("p",null,"This module adds ",(0,n.kt)("inlineCode",{parentName:"p"},"configureStep")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"prepareRequestAds")," steps to the ad pipeline in order to prevent ad requests entirely\nor a set a configurable key-value, which can be used in the ad server to handle blocklisted urls"),(0,n.kt)("h2",{id:"integration"},"Integration"),(0,n.kt)("p",null,"In your ",(0,n.kt)("inlineCode",{parentName:"p"},"index.ts")," import the blocklist-urls module and register it."),(0,n.kt)("p",null,"The configuration has multiple parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"mode")," - this describes what the module does if a blocklisted url is detected",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"key-value")," - sets a specific key-value on the googletag"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"block")," - rejects the pipeline step which leads to no ads being loaded"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"blocklist")," - this config object contains the blocklist configuration",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"provider")," - select how the blocklist is being loaded",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"static")," - inline configuration inside the ad tag"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"dynamic")," - loads an external json file")))))),(0,n.kt)("h3",{id:"blocklist-format"},"Blocklist format"),(0,n.kt)("p",null,"A blocklist contains a list of blocklist entries stored in the ",(0,n.kt)("inlineCode",{parentName:"p"},"urls")," property. A ",(0,n.kt)("inlineCode",{parentName:"p"},"IBlocklistEntry")," has two\nproperties."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"pattern")," - a string that is evaluated depending on the ",(0,n.kt)("inlineCode",{parentName:"li"},"matchType")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"matchType"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"exact")," - the url must match the pattern string"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"contains")," - the url must contain the given pattern string"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"regex")," - the url tests positive against the pattern regex string")))),(0,n.kt)("h3",{id:"examples"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"import { BlocklistedUrls } from '@highfivve/module-blocklist-url';\n\nmoli.registerModule(new BlocklistedUrls({\n  mode: 'block',\n  blocklist: {\n    provider: 'static',\n    blocklist: {\n      urls: [\n        // a specific path\n        { pattern: '/path/that/should/be/blocklisted', matchType: 'regex' },\n        // all http sites\n        { pattern: '^http://.*', matchType: 'regex' },\n        // contains a bad word\n        { pattern: '/tag/badword', matchType: 'contains' },\n        // exact url\n        { pattern: 'https://www.example.com/login', matchType: 'exact' }\n      ]\n    }\n  }\n}, window));\n")),(0,n.kt)("p",null,"You can combine ",(0,n.kt)("inlineCode",{parentName:"p"},"block")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"key-value")," mode by adding the module twice."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"import { BlocklistedUrls } from '@highfivve/module-blocklist-url';\n\nmoli.registerModule(new BlocklistedUrls({\n  mode: 'block',\n  blocklist: {\n    provider: 'static',\n    blocklist: {\n      urls: [\n        { pattern: '/login$' },\n        { pattern: '/register$' },\n      ]\n    }\n  }\n}, window));\n\nmoli.registerModule(new BlocklistedUrls({\n  mode: 'key-value',\n  blocklist: {\n    provider: 'static',\n    blocklist: {\n      urls: [\n        // a specific path\n        { pattern: '/path/that/should/be/blocklisted' },\n        // all http sites\n        { pattern: '^http://.*' }\n      ]\n    }\n  }\n}, window));\n")),(0,n.kt)("h2",{id:"classes"},"Classes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/moli-ad-tag/docs/modules/classes/blocklist_urls.BlocklistedUrls"},"BlocklistedUrls"))),(0,n.kt)("h2",{id:"type-aliases"},"Type Aliases"),(0,n.kt)("h3",{id:"blocklist"},"Blocklist"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"Blocklist"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"Object")),(0,n.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"urls")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/moli-ad-tag/docs/modules/modules/blocklist_urls#blocklistentry"},(0,n.kt)("inlineCode",{parentName:"a"},"BlocklistEntry")),"[]")))),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"blocklistentry"},"BlocklistEntry"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"BlocklistEntry"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"Object")),(0,n.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"matchType")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},'"regex"')," ","|"," ",(0,n.kt)("inlineCode",{parentName:"td"},'"contains"')," ","|"," ",(0,n.kt)("inlineCode",{parentName:"td"},'"exact"')),(0,n.kt)("td",{parentName:"tr",align:"left"},"Defines how the pattern should be matched against the url  - ",(0,n.kt)("inlineCode",{parentName:"td"},"regex")," - transform the pattern into a regex and runs ",(0,n.kt)("inlineCode",{parentName:"td"},"regex.test(url)")," - ",(0,n.kt)("inlineCode",{parentName:"td"},"contains")," - checks if the url contains the given pattern string - ",(0,n.kt)("inlineCode",{parentName:"td"},"exact")," - checks if the url exactly matches the given pattern string")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"pattern")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"A regex pattern for the complete href of the page")))),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"blocklistprovider"},"BlocklistProvider"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"BlocklistProvider"),": ",(0,n.kt)("a",{parentName:"p",href:"/moli-ad-tag/docs/modules/modules/blocklist_urls#staticblocklistprovider"},(0,n.kt)("inlineCode",{parentName:"a"},"StaticBlocklistProvider"))," ","|"," ",(0,n.kt)("a",{parentName:"p",href:"/moli-ad-tag/docs/modules/modules/blocklist_urls#dynamicblocklistprovider"},(0,n.kt)("inlineCode",{parentName:"a"},"DynamicBlocklistProvider"))),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"blocklisturlsblockingconfig"},"BlocklistUrlsBlockingConfig"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"BlocklistUrlsBlockingConfig"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"Object")),(0,n.kt)("h4",{id:"type-declaration-2"},"Type declaration"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"blocklist")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/moli-ad-tag/docs/modules/modules/blocklist_urls#blocklistprovider"},(0,n.kt)("inlineCode",{parentName:"a"},"BlocklistProvider"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"blocklist content")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"mode")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},'"block"')),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"block")," - this mode blocks ad requests entirely ",(0,n.kt)("inlineCode",{parentName:"td"},"key-value")," - sets a specified key value")))),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"blocklisturlsconfig"},"BlocklistUrlsConfig"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"BlocklistUrlsConfig"),": ",(0,n.kt)("a",{parentName:"p",href:"/moli-ad-tag/docs/modules/modules/blocklist_urls#blocklisturlsblockingconfig"},(0,n.kt)("inlineCode",{parentName:"a"},"BlocklistUrlsBlockingConfig"))," ","|"," ",(0,n.kt)("a",{parentName:"p",href:"/moli-ad-tag/docs/modules/modules/blocklist_urls#blocklisturlskeyvalueconfig"},(0,n.kt)("inlineCode",{parentName:"a"},"BlocklistUrlsKeyValueConfig"))),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"blocklisturlskeyvalueconfig"},"BlocklistUrlsKeyValueConfig"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"BlocklistUrlsKeyValueConfig"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"Object")),(0,n.kt)("h4",{id:"type-declaration-3"},"Type declaration"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"blocklist")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/moli-ad-tag/docs/modules/modules/blocklist_urls#blocklistprovider"},(0,n.kt)("inlineCode",{parentName:"a"},"BlocklistProvider"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"-")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"isBlocklistedValue?")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The value that is sent when a URL is listed.  default is ",(0,n.kt)("inlineCode",{parentName:"td"},"true"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"key")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The key that is used for the key value")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"mode")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},'"key-value"')),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"block")," - this mode blocks ad requests entirely ",(0,n.kt)("inlineCode",{parentName:"td"},"key-value")," - sets a specified key value")))),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"dynamicblocklistprovider"},"DynamicBlocklistProvider"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"DynamicBlocklistProvider"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"Object")),(0,n.kt)("p",null,"The dynamic configuration provider that lets you update entries without updating the ad tag"),(0,n.kt)("h4",{id:"type-declaration-4"},"Type declaration"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"endpoint")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Fetch the blocklist json from the specified endpoint")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"provider")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},'"dynamic"')),(0,n.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"staticblocklistprovider"},"StaticBlocklistProvider"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"StaticBlocklistProvider"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"Object")),(0,n.kt)("p",null,"A fixed set of blocklisted urls. Requires an ad tag update if new entries should be added"),(0,n.kt)("h4",{id:"type-declaration-5"},"Type declaration"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"blocklist")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/moli-ad-tag/docs/modules/modules/blocklist_urls#blocklist"},(0,n.kt)("inlineCode",{parentName:"a"},"Blocklist")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"provider")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},'"static"'))))))}k.isMDXComponent=!0}}]);