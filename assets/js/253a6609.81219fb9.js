"use strict";(self.webpackChunkthe_publisher_ad_tag=self.webpackChunkthe_publisher_ad_tag||[]).push([[2290],{5338:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var a=s(5893),t=s(1151);const n={},r="Type Alias: ViewabilityOverrides",o={id:"api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrides",title:"Type Alias: ViewabilityOverrides",description:"ViewabilityOverrides: object",source:"@site/docs/api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrides.md",sourceDirName:"api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases",slug:"/api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrides",permalink:"/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrides",draft:!1,unlisted:!1,editUrl:"https://github.com/highfivve/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrides.md",tags:[],version:"current",frontMatter:{},sidebar:"API",previous:{title:"Type Alias: ViewabilityOverrideEntryDisabled",permalink:"/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrideEntryDisabled"},next:{title:"blocklist",permalink:"/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/blocklist/"}},l={},d=[{value:"Index Signature",id:"index-signature",level:2}];function c(e){const i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,t.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.header,{children:(0,a.jsx)(i.h1,{id:"type-alias-viewabilityoverrides",children:"Type Alias: ViewabilityOverrides"})}),"\n",(0,a.jsxs)(i.blockquote,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"ViewabilityOverrides"}),": ",(0,a.jsx)(i.code,{children:"object"})]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Viewability is measured by gpt visibility events or a separate IntersectionObserver."}),"\n",(0,a.jsx)(i.p,{children:"This configuration object allows to provide a CSS selector to check for visibility.\nIf set and available in the DOM it will be used to check for visibility with an IntersectionObserver.\nOtherwise, the configured default behavior will be used."}),"\n",(0,a.jsx)(i.p,{children:"A record in this overrides object is a mapping of a slot's DOM id to the override configuration."}),"\n",(0,a.jsx)(i.h2,{id:"index-signature",children:"Index Signature"}),"\n",(0,a.jsxs)(i.p,{children:["[",(0,a.jsx)(i.code,{children:"slotDomId"}),": ",(0,a.jsx)(i.code,{children:"string"}),"]: ",(0,a.jsx)(i.a,{href:"/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrideEntry",children:(0,a.jsx)(i.code,{children:"ViewabilityOverrideEntry"})})," | ",(0,a.jsx)(i.code,{children:"undefined"})]})]})}function p(e={}){const{wrapper:i}={...(0,t.a)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},1151:(e,i,s)=>{s.d(i,{Z:()=>o,a:()=>r});var a=s(7294);const t={},n=a.createContext(t);function r(e){const i=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(n.Provider,{value:i},e.children)}}}]);