"use strict";(self.webpackChunkthe_publisher_ad_tag=self.webpackChunkthe_publisher_ad_tag||[]).push([[6843],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>u});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(r),u=a,g=c["".concat(p,".").concat(u)]||c[u]||d[u]||i;return r?n.createElement(g,o(o({ref:t},m),{},{components:r})):n.createElement(g,o({ref:t},m))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},1565:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const i={id:"Moli.reporting",title:"Namespace: reporting",sidebar_label:"reporting",custom_edit_url:null},o=void 0,l={unversionedId:"api/namespaces/Moli.reporting",id:"api/namespaces/Moli.reporting",title:"Namespace: reporting",description:"Moli.reporting",source:"@site/docs/api/namespaces/Moli.reporting.md",sourceDirName:"api/namespaces",slug:"/api/namespaces/Moli.reporting",permalink:"/moli-ad-tag/docs/api/namespaces/Moli.reporting",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"Moli.reporting",title:"Namespace: reporting",sidebar_label:"reporting",custom_edit_url:null},sidebar:"API",previous:{title:"pipeline",permalink:"/moli-ad-tag/docs/api/namespaces/Moli.pipeline"},next:{title:"schain",permalink:"/moli-ad-tag/docs/api/namespaces/Moli.schain"}},p={},s=[{value:"Reporting",id:"reporting",level:2},{value:"Metrics",id:"metrics",level:2},{value:"Integration",id:"integration",level:2},{value:"Interfaces",id:"interfaces",level:2},{value:"Type Aliases",id:"type-aliases",level:2},{value:"Metric",id:"metric",level:3},{value:"MetricType",id:"metrictype",level:3},{value:"Reporter",id:"reporter",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Parameters",id:"parameters",level:5},{value:"Returns",id:"returns",level:5}],m={toc:s};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/moli-ad-tag/docs/api/namespaces/Moli"},"Moli"),".reporting"),(0,a.kt)("h2",{id:"reporting"},"Reporting"),(0,a.kt)("p",null,"Moli provides extension points to add listeners for different metrics. These can\nbe used to measure performance and latency of your ad setup."),(0,a.kt)("h2",{id:"metrics"},"Metrics"),(0,a.kt)("p",null,"All metrics are based on the Web Performance API. If a browser doesn't support this\nAPI, no metrics will be collected."),(0,a.kt)("p",null,"Moli provides the following metrics"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"dfpLoad"),"    - measurement from ",(0,a.kt)("inlineCode",{parentName:"li"},"requestAds")," to ",(0,a.kt)("inlineCode",{parentName:"li"},"finish")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"prebidLoad")," - measurement from ",(0,a.kt)("inlineCode",{parentName:"li"},"requestBids")," to ",(0,a.kt)("inlineCode",{parentName:"li"},"bidsBackHandler")," called"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"a9Load"),"     - measurement from ",(0,a.kt)("inlineCode",{parentName:"li"},"fetchBids")," to ",(0,a.kt)("inlineCode",{parentName:"li"},"bidsBackHandler")," called"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ttfa"),"       - Time-To-First-Ad measurement from ",(0,a.kt)("inlineCode",{parentName:"li"},"requestAds")," to the first ad slot render call"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ttfr"),"       - Time-To-FIrst-Render measurement from ",(0,a.kt)("inlineCode",{parentName:"li"},"requestAds")," to first ad slot fully rendered"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"adslot"),"     - Contains multiple metrics for a single ad slot. See ",(0,a.kt)("inlineCode",{parentName:"li"},"AdSlotMetric")," for more details.")),(0,a.kt)("h2",{id:"integration"},"Integration"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,a.kt)("p",null,"A simple integration in the ad configuration object. To see the console reporter implementation\ntake a look ",(0,a.kt)("a",{parentName:"p",href:"#reporter"},"the reporter type"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"reporting: {\n  // report everything\n  sampleRate: 1,\n  // a regex that splits the publisher id and `gf` from the ad unit path\n  adUnitRegex: //\\d*/gf//i,\n  // an array of reporters\n  reporters: [\n    consoleLogReporter\n  ]\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"See"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#reporter"},"The Reporter type contains implementation examples"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/de/docs/Web/API/Performance"},"https://developer.mozilla.org/de/docs/Web/API/Performance"))),(0,a.kt)("h2",{id:"interfaces"},"Interfaces"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/moli-ad-tag/docs/api/interfaces/Moli.reporting.AdSlotMetric"},"AdSlotMetric")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/moli-ad-tag/docs/api/interfaces/Moli.reporting.AdSlotsMetric"},"AdSlotsMetric")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/moli-ad-tag/docs/api/interfaces/Moli.reporting.BooleanMetric"},"BooleanMetric")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/moli-ad-tag/docs/api/interfaces/Moli.reporting.IMetric"},"IMetric")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/moli-ad-tag/docs/api/interfaces/Moli.reporting.ReportingConfig"},"ReportingConfig")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/moli-ad-tag/docs/api/interfaces/Moli.reporting.SingleMeasurementMetric"},"SingleMeasurementMetric"))),(0,a.kt)("h2",{id:"type-aliases"},"Type Aliases"),(0,a.kt)("h3",{id:"metric"},"Metric"),(0,a.kt)("p",null,"\u01ac ",(0,a.kt)("strong",{parentName:"p"},"Metric"),": ",(0,a.kt)("a",{parentName:"p",href:"/moli-ad-tag/docs/api/interfaces/Moli.reporting.SingleMeasurementMetric"},(0,a.kt)("inlineCode",{parentName:"a"},"SingleMeasurementMetric"))," ","|"," ",(0,a.kt)("a",{parentName:"p",href:"/moli-ad-tag/docs/api/interfaces/Moli.reporting.AdSlotMetric"},(0,a.kt)("inlineCode",{parentName:"a"},"AdSlotMetric"))," ","|"," ",(0,a.kt)("a",{parentName:"p",href:"/moli-ad-tag/docs/api/interfaces/Moli.reporting.AdSlotsMetric"},(0,a.kt)("inlineCode",{parentName:"a"},"AdSlotsMetric"))," ","|"," ",(0,a.kt)("a",{parentName:"p",href:"/moli-ad-tag/docs/api/interfaces/Moli.reporting.BooleanMetric"},(0,a.kt)("inlineCode",{parentName:"a"},"BooleanMetric"))),(0,a.kt)("p",null,"Base type for all provided metrics."),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"metrictype"},"MetricType"),(0,a.kt)("p",null,"\u01ac ",(0,a.kt)("strong",{parentName:"p"},"MetricType"),": ",(0,a.kt)("inlineCode",{parentName:"p"},'"cmpLoad"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"dfpLoad"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"prebidLoad"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"a9Load"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"ttfa"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"ttfr"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"adSlot"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},'"adSlots"')),(0,a.kt)("p",null,"Union type for all provided metric types."),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"reporter"},"Reporter"),(0,a.kt)("p",null,"\u01ac ",(0,a.kt)("strong",{parentName:"p"},"Reporter"),": (",(0,a.kt)("inlineCode",{parentName:"p"},"metric"),": ",(0,a.kt)("a",{parentName:"p",href:"/moli-ad-tag/docs/api/namespaces/Moli.reporting#metric"},(0,a.kt)("inlineCode",{parentName:"a"},"Metric")),") => ",(0,a.kt)("inlineCode",{parentName:"p"},"void")),(0,a.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,a.kt)("p",null,"\u25b8 (",(0,a.kt)("inlineCode",{parentName:"p"},"metric"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"void")),(0,a.kt)("p",null,"A reporter is a simple function that receives a metric and handles it."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,a.kt)("p",null,"A simple console log reporter that logs everything in grouped outputs."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Moli } from 'moli-ad-tag/source/ts/types/moli';\nexport const consoleLogReporter: Moli.reporting.Reporter = (metric: Moli.reporting.Metric) => {\n\nswitch (metric.type) {\n   case 'dfpLoad': {\n     console.groupCollapsed('DFP Load Time');\n     console.log('startTime', Math.round(metric.measurement.startTime));\n     console.log('duration', metric.measurement.duration);\n     console.groupEnd();\n     break;\n   }\n   case 'prebidLoad': {\n     console.groupCollapsed('Prebid Load Time');\n     console.log('name', metric.measurement.name);\n     console.log('startTime', Math.round(metric.measurement.startTime));\n     console.log('duration', Math.round(metric.measurement.duration));\n     console.groupEnd();\n     break;\n   }\ncase 'a9Load': {\n     console.groupCollapsed('A9 Load Time');\n     console.log('name', metric.measurement.name);\n     console.log('startTime', Math.round(metric.measurement.startTime));\n     console.log('duration', Math.round(metric.measurement.duration));\n     console.groupEnd();\n     break;\n   }\n   case 'ttfa': {\n     console.groupCollapsed('Time to first Ad');\n     console.log('visible at', Math.round(metric.measurement.startTime + metric.measurement.duration));\n     console.log('startTime', Math.round(metric.measurement.startTime));\n     console.log('duration', Math.round(metric.measurement.duration));\n     console.groupEnd();\n     break;\n   }\n   case 'ttfr': {\n     console.groupCollapsed('Time to first Render');\n     console.log('rendered at', Math.round(metric.measurement.startTime + metric.measurement.duration));\n     console.log('startTime', Math.round(metric.measurement.startTime));\n     console.log('duration', Math.round(metric.measurement.duration));\n     console.groupEnd();\n     break;\n   }\n   case 'adSlots': {\n     console.groupCollapsed('AdSlot metrics');\n     console.log('number of slots', metric.numberAdSlots);\n     console.log('number of empty slots', metric.numberEmptyAdSlots);\n     console.groupEnd();\n     break;\n   }\n   case 'adSlot': {\n     console.groupCollapsed(`AdSlot: ${metric.adUnitName}`);\n     console.log('advertiser id', metric.advertiserId);\n     console.log('order id', metric.campaignId);\n     console.log('line item id', metric.lineItemId);\n     console.log('render start at', Math.round(metric.rendered.startTime));\n     console.log('rendering duration', Math.round(metric.rendering.duration));\n     console.log('loaded at', Math.round(metric.loaded.startTime + metric.loaded.duration));\n     console.groupEnd();\n     break;\n   }\n}\n")),(0,a.kt)("h5",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"metric")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/moli-ad-tag/docs/api/namespaces/Moli.reporting#metric"},(0,a.kt)("inlineCode",{parentName:"a"},"Metric")))))),(0,a.kt)("h5",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"void")))}d.isMDXComponent=!0}}]);