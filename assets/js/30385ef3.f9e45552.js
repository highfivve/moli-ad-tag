"use strict";(self.webpackChunkthe_publisher_ad_tag=self.webpackChunkthe_publisher_ad_tag||[]).push([[9895],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return c}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),o=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=o(e.components);return r.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),k=o(n),c=a,u=k["".concat(d,".").concat(c)]||k[c]||m[c]||i;return n?r.createElement(u,l(l({ref:t},s),{},{components:n})):r.createElement(u,l({ref:t},s))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=k;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p.mdxType="string"==typeof e?e:a,l[1]=p;for(var o=2;o<i;o++)l[o]=n[o];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},7704:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return d},metadata:function(){return o},toc:function(){return s},default:function(){return k}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),l=["components"],p={id:"prebidjs.server",title:"Namespace: server",sidebar_label:"server",custom_edit_url:null},d=void 0,o={unversionedId:"api/namespaces/prebidjs.server",id:"api/namespaces/prebidjs.server",isDocsHomePage:!1,title:"Namespace: server",description:"prebidjs.server",source:"@site/docs/api/namespaces/prebidjs.server.md",sourceDirName:"api/namespaces",slug:"/api/namespaces/prebidjs.server",permalink:"/moli-ad-tag/docs/api/namespaces/prebidjs.server",editUrl:null,tags:[],version:"current",frontMatter:{id:"prebidjs.server",title:"Namespace: server",sidebar_label:"server",custom_edit_url:null},sidebar:"API",previous:{title:"priceGranularity",permalink:"/moli-ad-tag/docs/api/namespaces/prebidjs.priceGranularity"},next:{title:"targetingcontrols",permalink:"/moli-ad-tag/docs/api/namespaces/prebidjs.targetingcontrols"}},s=[{value:"Interfaces",id:"interfaces",children:[]},{value:"Type aliases",id:"type-aliases",children:[{value:"AdapterOptions",id:"adapteroptions",children:[]},{value:"BidSource",id:"bidsource",children:[]},{value:"BidderControl",id:"biddercontrol",children:[]},{value:"Endpoint",id:"endpoint",children:[]},{value:"ExtPrebid",id:"extprebid",children:[]},{value:"S2SConfig",id:"s2sconfig",children:[]},{value:"StoredRequest",id:"storedrequest",children:[]}]}],m={toc:s};function k(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"prebidjs"},"prebidjs"),".server"),(0,i.kt)("h2",{id:"interfaces"},"Interfaces"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../interfaces/prebidjs.server.IS2SConfig"},"IS2SConfig")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../interfaces/prebidjs.server.IS2STestingConfig"},"IS2STestingConfig"))),(0,i.kt)("h2",{id:"type-aliases"},"Type aliases"),(0,i.kt)("h3",{id:"adapteroptions"},"AdapterOptions"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"AdapterOptions"),": { readonly ","[bidder in BidderCode]","?: any }"),(0,i.kt)("p",null,"Arguments will be added to resulting OpenRTB payload to Prebid Server in every impression\nobject at ",(0,i.kt)("inlineCode",{parentName:"p"},"request.imp[].ext.BIDDER"),"."),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"bidsource"},"BidSource"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"BidSource"),": { ",(0,i.kt)("inlineCode",{parentName:"p"},"client"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")," ; ",(0,i.kt)("inlineCode",{parentName:"p"},"server"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),"  } ","|"," { ",(0,i.kt)("inlineCode",{parentName:"p"},"client"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"100"),"  } ","|"," { ",(0,i.kt)("inlineCode",{parentName:"p"},"server"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"100"),"  }"),(0,i.kt)("p",null,"control the ratio between client and server.\n",(0,i.kt)("inlineCode",{parentName:"p"},"client")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"server")," must add up to ",(0,i.kt)("inlineCode",{parentName:"p"},"100"),"."),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"biddercontrol"},"BidderControl"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"BidderControl"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("p",null,"Configure the A/B test between client and server"),(0,i.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bidSource")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"prebidjs.server#bidsource"},(0,i.kt)("inlineCode",{parentName:"a"},"BidSource"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"control the ratio between client and server. ",(0,i.kt)("inlineCode",{parentName:"td"},"client")," and ",(0,i.kt)("inlineCode",{parentName:"td"},"server")," must add up to ",(0,i.kt)("inlineCode",{parentName:"td"},"100"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"includeSourceKvp")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"As a Publisher, I'd like to run tests on one part or my site per one of the other use cases above. I'll use the test KVP to confirm relative responses, so would like to have the hb_source test KVP coming in even on pages where the server test isn't running.")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"endpoint"},"Endpoint"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"Endpoint"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("p",null,"Endpoint definition"),(0,i.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"noP1Consent?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Endpoint that works without cookies")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"p1Consent")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Endpoint that supports cookies")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"extprebid"},"ExtPrebid"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"ExtPrebid"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("h4",{id:"type-declaration-2"},"Type declaration"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"cache?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"cache.vastxml?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"cache.vastxml.returnCreative")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"storedrequest?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"prebidjs.server#storedrequest"},(0,i.kt)("inlineCode",{parentName:"a"},"StoredRequest"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Stored Requests are also allowed on the BidRequest. These work exactly the same way, but support storing properties like timeouts and price granularity.  ",(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," ",(0,i.kt)("a",{parentName:"td",href:"https://docs.prebid.org/prebid-server/features/pbs-storedreqs-go.html"},"https://docs.prebid.org/prebid-server/features/pbs-storedreqs-go.html"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"targeting?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Targeting refers to strings which are sent to the adserver to make header bidding possible.  ",(0,i.kt)("inlineCode",{parentName:"td"},"request.ext.prebid.targeting")," is an optional property which causes Prebid Server to set these params on the response at ",(0,i.kt)("inlineCode",{parentName:"td"},"response.seatbid[i].bid[j].ext.prebid.targeting"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"targeting.includebidderkeys?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to include targeting for the best bid from each bidder in ",(0,i.kt)("inlineCode",{parentName:"td"},"response.seatbid[].bid[]"),"  ",(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"efault"))," false.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"targeting.includeformat?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},'Whether to include the "hb_format" targeting key.  ',(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"efault"))," false.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"targeting.includewinners?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to include targeting for the winning bids in ",(0,i.kt)("inlineCode",{parentName:"td"},"response.seatbid[].bid[]"),".  ",(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"efault"))," false.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"targeting.preferdeals?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"If targeting is returned and this is true, PBS will choose the highest value deal before choosing the highest value non-deal.  ",(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"default"))," false")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"targeting.pricegranularity")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Defines how PBS quantizes bid prices into buckets")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"targeting.pricegranularity.ranges")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,i.kt)("a",{parentName:"td",href:"../interfaces/prebidjs.priceGranularity.IPriceBucketConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"IPriceBucketConfig")),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Non-overlapping price bucket definitions")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"s2sconfig"},"S2SConfig"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"S2SConfig"),": ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/prebidjs.server.IS2SConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"IS2SConfig"))," & ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/prebidjs.server.IS2STestingConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"IS2STestingConfig"))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"storedrequest"},"StoredRequest"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"StoredRequest"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," ",(0,i.kt)("a",{parentName:"p",href:"https://docs.prebid.org/prebid-server/features/pbs-storedreqs-go.html"},"https://docs.prebid.org/prebid-server/features/pbs-storedreqs-go.html")),(0,i.kt)("h4",{id:"type-declaration-3"},"Type declaration"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"id")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))))}k.isMDXComponent=!0}}]);