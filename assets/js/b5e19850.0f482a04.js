"use strict";(self.webpackChunkthe_publisher_ad_tag=self.webpackChunkthe_publisher_ad_tag||[]).push([[114],{8453:(e,s,a)=>{a.d(s,{R:()=>n,x:()=>l});var i=a(6540);const t={},r=i.createContext(t);function n(e){const s=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),i.createElement(r.Provider,{value:s},e.children)}},9603:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>n,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrideEntryBase","title":"Type Alias: ViewabilityOverrideEntryBase","description":"ViewabilityOverrideEntryBase: object","source":"@site/docs/api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrideEntryBase.md","sourceDirName":"api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases","slug":"/api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrideEntryBase","permalink":"/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrideEntryBase","draft":false,"unlisted":false,"editUrl":"https://github.com/highfivve/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrideEntryBase.md","tags":[],"version":"current","frontMatter":{},"sidebar":"API","previous":{"title":"Type Alias: ViewabilityOverrideEntry","permalink":"/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrideEntry"},"next":{"title":"Type Alias: ViewabilityOverrideEntryCss","permalink":"/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrideEntryCss"}}');var t=a(4848),r=a(8453);const n={},l="Type Alias: ViewabilityOverrideEntryBase",o={},d=[{value:"Type declaration",id:"type-declaration",level:2},{value:"refreshBucket?",id:"refreshbucket",level:3}];function c(e){const s={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"type-alias-viewabilityoverrideentrybase",children:"Type Alias: ViewabilityOverrideEntryBase"})}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"ViewabilityOverrideEntryBase"}),": ",(0,t.jsx)(s.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,t.jsx)(s.h3,{id:"refreshbucket",children:"refreshBucket?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"refreshBucket"}),": ",(0,t.jsx)(s.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"An optional bucket that is used to refresh the ad slot and all other ad slots in the same bucket.\nThis is mainly used for the skin ad format, that requires the entire 'page' bucket to be refreshed,\nif the wallpaper_pixel ad slot is reloaded."}),"\n",(0,t.jsx)(s.p,{children:"NOTE: use with caution! This will refresh all ads in the same bucket, which could refresh slots that\nare not in viewport."})]})}function p(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);