"use strict";(self.webpackChunkthe_publisher_ad_tag=self.webpackChunkthe_publisher_ad_tag||[]).push([[5823],{8298:(e,s,l)=>{l.r(s),l.d(s,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"api/types/moliConfig/namespaces/modules/namespaces/blocklist/type-aliases/BlocklistLabelEntry","title":"Type Alias: BlocklistLabelEntry","description":"BlocklistLabelEntry: object","source":"@site/docs/api/types/moliConfig/namespaces/modules/namespaces/blocklist/type-aliases/BlocklistLabelEntry.md","sourceDirName":"api/types/moliConfig/namespaces/modules/namespaces/blocklist/type-aliases","slug":"/api/types/moliConfig/namespaces/modules/namespaces/blocklist/type-aliases/BlocklistLabelEntry","permalink":"/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/blocklist/type-aliases/BlocklistLabelEntry","draft":false,"unlisted":false,"editUrl":"https://github.com/highfivve/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/blocklist/type-aliases/BlocklistLabelEntry.md","tags":[],"version":"current","frontMatter":{},"sidebar":"API","previous":{"title":"Type Alias: BlocklistEntry","permalink":"/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/blocklist/type-aliases/BlocklistEntry"},"next":{"title":"Type Alias: BlocklistProvider","permalink":"/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/blocklist/type-aliases/BlocklistProvider"}}');var n=l(4848),a=l(8453);const i={},c="Type Alias: BlocklistLabelEntry",r={},o=[{value:"Use cases",id:"use-cases",level:2},{value:"Type declaration",id:"type-declaration",level:2},{value:"label",id:"label",level:3},{value:"matchType",id:"matchtype",level:3},{value:"pattern",id:"pattern",level:3},{value:"reverseMatch?",id:"reversematch",level:3}];function d(e){const s={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"type-alias-blocklistlabelentry",children:"Type Alias: BlocklistLabelEntry"})}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"BlocklistLabelEntry"}),": ",(0,n.jsx)(s.code,{children:"object"})]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"A label blocklist entry that can be used to set a label dynamically during an ad pipeline run."}),"\n",(0,n.jsx)(s.h2,{id:"use-cases",children:"Use cases"}),"\n",(0,n.jsx)(s.p,{children:"Labels control various aspects of the ad pipeline, such as:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"ad slots that can be requested"}),"\n",(0,n.jsx)(s.li,{children:"size configs that can be applied"}),"\n",(0,n.jsx)(s.li,{children:"bidders that are active"}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Adding labels dynamically based on url patterns allows us to control those aspects dynamically\nthrough the ad tag configuration."}),"\n",(0,n.jsx)(s.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,n.jsx)(s.h3,{id:"label",children:"label"}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"readonly"})," ",(0,n.jsx)(s.strong,{children:"label"}),": ",(0,n.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"The label that is set if the url matches the label blocklist entry"}),"\n",(0,n.jsx)(s.h3,{id:"matchtype",children:"matchType"}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"readonly"})," ",(0,n.jsx)(s.strong,{children:"matchType"}),": ",(0,n.jsx)(s.code,{children:'"regex"'})," | ",(0,n.jsx)(s.code,{children:'"contains"'})," | ",(0,n.jsx)(s.code,{children:'"exact"'})]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Defines how the pattern should be matched against the url"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"regex"})," - transform the pattern into a regex and runs ",(0,n.jsx)(s.code,{children:"regex.test(url)"})]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"contains"})," - checks if the url contains the given pattern string"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"exact"})," - checks if the url exactly matches the given pattern string"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"pattern",children:"pattern"}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"readonly"})," ",(0,n.jsx)(s.strong,{children:"pattern"}),": ",(0,n.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"The regex pattern for the complete href of the page"}),"\n",(0,n.jsx)(s.h3,{id:"reversematch",children:"reverseMatch?"}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"readonly"})," ",(0,n.jsx)(s.code,{children:"optional"})," ",(0,n.jsx)(s.strong,{children:"reverseMatch"}),": ",(0,n.jsx)(s.code,{children:"boolean"})]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"If set to true, the pattern is matched in reverse, meaning that if the url does not match the pattern,\nthe label will be set."}),"\n",(0,n.jsx)(s.p,{children:"This is useful for adding labels to all urls with certain exceptions, like the homepage or\na login page."})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,s,l)=>{l.d(s,{R:()=>i,x:()=>c});var t=l(6540);const n={},a=t.createContext(n);function i(e){const s=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);