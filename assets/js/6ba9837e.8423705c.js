"use strict";(self.webpackChunkthe_publisher_ad_tag=self.webpackChunkthe_publisher_ad_tag||[]).push([[8738],{796:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>r,contentTitle:()=>d,default:()=>p,frontMatter:()=>n,metadata:()=>l,toc:()=>o});var a=s(5893),t=s(1151);const n={},d="Type Alias: ViewabilityOverrideEntryDisabled",l={id:"api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrideEntryDisabled",title:"Type Alias: ViewabilityOverrideEntryDisabled",description:"ViewabilityOverrideEntryDisabled: ViewabilityOverrideEntryBase & object",source:"@site/docs/api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrideEntryDisabled.md",sourceDirName:"api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases",slug:"/api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrideEntryDisabled",permalink:"/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrideEntryDisabled",draft:!1,unlisted:!1,editUrl:"https://github.com/highfivve/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrideEntryDisabled.md",tags:[],version:"current",frontMatter:{},sidebar:"API",previous:{title:"Type Alias: ViewabilityOverrideEntryCss",permalink:"/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrideEntryCss"},next:{title:"Type Alias: ViewabilityOverrides",permalink:"/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrides"}},r={},o=[{value:"Type declaration",id:"type-declaration",level:2},{value:"disableAllAdVisibilityChecks",id:"disablealladvisibilitychecks",level:3},{value:"disabledAdVisibilityCheckAdvertiserIds?",id:"disabledadvisibilitycheckadvertiserids",level:3},{value:"variant",id:"variant",level:3}];function c(e){const i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,t.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.header,{children:(0,a.jsx)(i.h1,{id:"type-alias-viewabilityoverrideentrydisabled",children:"Type Alias: ViewabilityOverrideEntryDisabled"})}),"\n",(0,a.jsxs)(i.blockquote,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"ViewabilityOverrideEntryDisabled"}),": ",(0,a.jsx)(i.a,{href:"/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/adreload/type-aliases/ViewabilityOverrideEntryBase",children:(0,a.jsx)(i.code,{children:"ViewabilityOverrideEntryBase"})})," & ",(0,a.jsx)(i.code,{children:"object"})]}),"\n"]}),"\n",(0,a.jsx)(i.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,a.jsx)(i.h3,{id:"disablealladvisibilitychecks",children:"disableAllAdVisibilityChecks"}),"\n",(0,a.jsxs)(i.blockquote,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"disableAllAdVisibilityChecks"}),": ",(0,a.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Enable reloading ads that are not in viewport without any restrictions."}),"\n",(0,a.jsx)(i.p,{children:"It is not advised to use this option. Impressions are usually only counted on ads that\nhave been 50% visible, and it's generally not very user-centric to load stuff that is out\nof viewport."}),"\n",(0,a.jsx)(i.p,{children:"Set this to false and provide additional configuration options to restrict the unconditional\nad reload to certain advertisers."}),"\n",(0,a.jsx)(i.h3,{id:"disabledadvisibilitycheckadvertiserids",children:"disabledAdVisibilityCheckAdvertiserIds?"}),"\n",(0,a.jsxs)(i.blockquote,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.code,{children:"optional"})," ",(0,a.jsx)(i.strong,{children:"disabledAdVisibilityCheckAdvertiserIds"}),": ",(0,a.jsx)(i.code,{children:"number"}),"[]"]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"An optional list of advertisers that are allowed to be reloaded, but no additional ad visibility check is performed.\nThis is necessary for special formats that may take a bit of time to render and the DOM elements are not yet ready,\nwhen the IntersectionObserver is about to be configured."}),"\n",(0,a.jsx)(i.h3,{id:"variant",children:"variant"}),"\n",(0,a.jsxs)(i.blockquote,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"variant"}),": ",(0,a.jsx)(i.code,{children:'"disabled"'})]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Enable reloading ads that are not in viewport. It is not advised to use this option.\nImpressions are usually only counted on ads that have been 50% visible, and it's generally not\nvery user-centric to load stuff that is out of viewport."})]})}function p(e={}){const{wrapper:i}={...(0,t.a)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},1151:(e,i,s)=>{s.d(i,{Z:()=>l,a:()=>d});var a=s(7294);const t={},n=a.createContext(t);function d(e){const i=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),a.createElement(n.Provider,{value:i},e.children)}}}]);