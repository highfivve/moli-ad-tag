(self.webpackChunkthe_publisher_ad_tag=self.webpackChunkthe_publisher_ad_tag||[]).push([[4053],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var c=r.createContext({}),u=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},l=function(t){var e=u(t.components);return r.createElement(c.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,i=t.originalType,c=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),d=u(n),f=a,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||i;return n?r.createElement(m,o(o({ref:e},l),{},{components:n})):r.createElement(m,o({ref:e},l))}));function f(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=t,s.mdxType="string"==typeof t?t:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5240:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o={id:"quick-start",title:"Quick start",slug:"quick-start"},s=void 0,c={unversionedId:"getting-started/quick-start",id:"getting-started/quick-start",isDocsHomePage:!1,title:"Quick start",description:"Getting started is straightfoward and we will explain a lot of aspects of the ad tag based on this minimal example.",source:"@site/docs/getting-started/quick-start.md",sourceDirName:"getting-started",slug:"/getting-started/quick-start",permalink:"/docs/getting-started/quick-start",editUrl:"https://github.com/highfivve/moli-ad-tag/docs/getting-started/quick-start.md",version:"current",frontMatter:{id:"quick-start",title:"Quick start",slug:"quick-start"},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/"},next:{title:"Build your ad tag",permalink:"/docs/getting-started/adtag-build"}},u=[],l={toc:u};function p(t){var e=t.components,n=(0,a.Z)(t,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Getting started is straightfoward and we will explain a lot of aspects of the ad tag based on this minimal example."),(0,i.kt)("p",null,"First create an ",(0,i.kt)("inlineCode",{parentName:"p"},"index.html")," with the following content:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n\n<head>\n    <meta charset="UTF-8">\n    <title>Quick Start</title>\n\n    \x3c!-- CMP Stub--\x3e\n    <script>\n        !function () { var e = function () { var e, t = "__tcfapiLocator", a = [], n = window; for (; n;) { try { if (n.frames[t]) { e = n; break } } catch (e) { } if (n === window.top) break; n = n.parent } e || (!function e() { var a = n.document, r = !!n.frames[t]; if (!r) if (a.body) { var i = a.createElement("iframe"); i.style.cssText = "display:none", i.name = t, a.body.appendChild(i) } else setTimeout(e, 5); return !r }(), n.__tcfapi = function () { for (var e, t = arguments.length, n = new Array(t), r = 0; r < t; r++)n[r] = arguments[r]; if (!n.length) return a; if ("setGdprApplies" === n[0]) n.length > 3 && 2 === parseInt(n[1], 10) && "boolean" == typeof n[3] && (e = n[3], "function" == typeof n[2] && n[2]("set", !0)); else if ("ping" === n[0]) { var i = { gdprApplies: e, cmpLoaded: !1, cmpStatus: "stub" }; "function" == typeof n[2] && n[2](i) } else a.push(n) }, n.addEventListener("message", (function (e) { var t = "string" == typeof e.data, a = {}; try { a = t ? JSON.parse(e.data) : e.data } catch (e) { } var n = a.__tcfapiCall; n && window.__tcfapi(n.command, n.version, (function (a, r) { var i = { __tcfapiReturn: { returnValue: a, success: r, callId: n.callId } }; t && (i = JSON.stringify(i)), e.source.postMessage(i, "*") }), n.parameter) }), !1)) }; "undefined" != typeof module ? module.exports = e : e() }();\n    <\/script>\n    \x3c!-- TODO implement a simple CMP stub that always returns full consent? Or at least gdpr applies "false"--\x3e\n    \x3c!-- sourcepoint CMP (required) --\x3e\n    <script>\n    window._sp_ = {\n        config: {\n            accountId: 270,\n            baseEndpoint: \'https://cdn.privacy-mgmt.com\',\n            propertyHref: \'https://local.h5v.eu\'\n        }\n    }\n    <\/script>\n    <script src="https://cdn.privacy-mgmt.com/wrapperMessagingWithoutDetection.js"><\/script>\n\n    \x3c!-- your ad tag --\x3e\n    <script async="async" src="https://assets.h5v.eu/prebuilt/ad-tag/latest.js"><\/script>\n\n    \x3c!-- configure slots and request ads --\x3e\n    <script>\n        // setup the command queue\n        window.moli = window.moli || {que: []};\n\n        // push callbacks into the queue\n        window.moli.que.push(function(adTag) {\n\n            // on the fly configuration\n            adTag.configure({\n                environment: \'test\',\n                slots: [\n                  {\n                    // a div element with this id must be present when the DOM has finished loading\n                    domId: \'content_1\',\n\n                    // GAM ad unit path\n                    adUnitPath: \'/1234/content_1\',\n\n                    // configure the GAM slot type (out-of-page, interstitial, anchor ad)\n                    position: \'in-page\',\n\n                    // when and how should the ad slot be loaded\n                    behaviour: { loaded: \'eager\' },\n\n                    // all sizes this ad slot supports\n                    sizes: [[300, 250]],\n\n                    // responsive ads configuration\n                    sizeConfig: [\n                      { mediaQuery: \'(min-width: 0px)\', sizesSupported: [[300, 250]] }\n                    ]\n                  }\n                ]\n            });\n\n            // start requesting ads\n            adTag.requestAds();\n        });\n      <\/script>\n</head>\n\n<body>\n    <h2>content_1</h2>\n    <div id="content_1"></div>\n    <hr>\n</body>\n\n</html>\n\n')),(0,i.kt)("p",null,"Then start a webserver in this directory. Most OS have python installed so you could use"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ python -m SimpleHTTPServer 8000\n")),(0,i.kt)("p",null,"And open localhost:8000"),(0,i.kt)("p",null,"\ud83c\udf1f Congratulations \ud83c\udf1f You have configured and used your first own ad tag. In the folowing chapters\nwel will unpack everything that's in this minimal example."))}p.isMDXComponent=!0}}]);