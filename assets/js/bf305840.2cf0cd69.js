"use strict";(self.webpackChunkthe_publisher_ad_tag=self.webpackChunkthe_publisher_ad_tag||[]).push([[1953],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return c}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=d(n),c=r,m=u["".concat(p,".").concat(c)]||u[c]||k[c]||i;return n?a.createElement(m,l(l({ref:t},s),{},{components:n})):a.createElement(m,l({ref:t},s))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5163:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return s},default:function(){return u}});var a=n(2122),r=n(9756),i=(n(7294),n(3905)),l=["components"],o={id:"apstag.IApsTag",title:"Interface: IApsTag",sidebar_label:"IApsTag",custom_edit_url:null},p=void 0,d={unversionedId:"api/interfaces/apstag.IApsTag",id:"api/interfaces/apstag.IApsTag",isDocsHomePage:!1,title:"Interface: IApsTag",description:"apstag.IApsTag",source:"@site/docs/api/interfaces/apstag.IApsTag.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/apstag.IApsTag",permalink:"/docs/api/interfaces/apstag.IApsTag",editUrl:null,version:"current",frontMatter:{id:"apstag.IApsTag",title:"Interface: IApsTag",sidebar_label:"IApsTag",custom_edit_url:null},sidebar:"API",previous:{title:"PriceRule",permalink:"/docs/api/interfaces/Moli.yield_optimization.PriceRule"},next:{title:"IBidConfig",permalink:"/docs/api/interfaces/apstag.IBidConfig"}},s=[{value:"Properties",id:"properties",children:[{value:"_Q",id:"_q",children:[]}]},{value:"Methods",id:"methods",children:[{value:"dpa",id:"dpa",children:[]}]},{value:"Delete Token",id:"delete-token",children:[{value:"fetchBids",id:"fetchbids",children:[]},{value:"init",id:"init",children:[]},{value:"rpa",id:"rpa",children:[]}]},{value:"Renew token",id:"renew-token",children:[{value:"setDisplayBids",id:"setdisplaybids",children:[]},{value:"targetingKeys",id:"targetingkeys",children:[]},{value:"upa",id:"upa",children:[]}]},{value:"Update token",id:"update-token",children:[]}],k={toc:s};function u(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/namespaces/apstag"},"apstag"),".IApsTag"),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"_q"},"_","Q"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"_","Q"),": ","[",(0,i.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"IArguments"),"][]"),(0,i.kt)("p",null,"Command queue on the 'apstag' window object"),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"dpa"},"dpa"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"dpa"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"callback?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h2",{id:"delete-token"},"Delete Token"),(0,i.kt)("p",null,"This function can be called to delete the AMZN-token without configuring arguments.\nThis method should be used when you prefer to delete the token explicitly."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," Amazon Publisher Audiences documentation"),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"callback?")),(0,i.kt)("td",{parentName:"tr",align:"left"},"() => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fetchbids"},"fetchBids"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"fetchBids"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"bidConfig"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"callback"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"This method requests bids asynchronously then executes the provided callback function. The callback is executed\nwhen the network request for bids is returned to the page, or when the timeout is reached."),(0,i.kt)("p",null,"To request bids, call apstag.fetchBids with a bidConfig argument that includes what slots to run auctions for and\nthe function to execute when the bids are returned to the page."),(0,i.kt)("p",null,"Slot IDs must match the div IDs that contains the ad slots, and this ID is echoed back in the bid response in the\nSlotID property to associate that bid with the slot."),(0,i.kt)("p",null,"NOTE: The slot IDs and sizes on your site may vary by page/template"),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bidConfig")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/interfaces/apstag.IBidConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"IBidConfig")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"callback")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"bids"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"Object"),"[]) => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"init"},"init"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"init"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"config"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Set the configuration for apstag operation.\nThis method should only be called once and must be called prior to calling apstag.fetchBids()."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/interfaces/apstag.IInitConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"IInitConfig")))))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"rpa"},"rpa"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"rpa"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"tokenConfig"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"callback?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h2",{id:"renew-token"},"Renew token"),(0,i.kt)("p",null,"This function should be called every time a page loads and there are hashed record(s) available for the current\nuser. Where GDPR applies, this method should only be called after the CMP has loaded and after the user has\nconfigured their consent. This function will create an ",(0,i.kt)("inlineCode",{parentName:"p"},"AMZN-token"),", if one does not already exist, or if the existing\ntoken has expired, and will store that token in the 1st party cookie space"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," Amazon Publisher Audiences documentation"),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tokenConfig")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/interfaces/apstag.ITokenConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"ITokenConfig")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"callback?")),(0,i.kt)("td",{parentName:"tr",align:"left"},"() => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setdisplaybids"},"setDisplayBids"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setDisplayBids"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"If you have set googletag as the config.adServer in apstag.init(), this method will set the bid targeting on the\ngoogletag slots."),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"targetingkeys"},"targetingKeys"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"targetingKeys"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Returns an array of targeting keys associated with the bid objects"),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"upa"},"upa"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"upa"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"tokenConfig"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"callback?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h2",{id:"update-token"},"Update token"),(0,i.kt)("p",null,"This function should be called every time an event occurs that would change the value of the AMZN-token.\nSimilar to the apstag.rpa, where GDPR applies, this method should only be called after the CMP has loaded\nand after the user has configured their consent. When this function is called, it will delete the current AMZN-\ntoken (if one exists), create a new AMZN-token, and save it on the client."),(0,i.kt)("p",null,"Events for which apstag.upa should be called:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"User logs in."),(0,i.kt)("li",{parentName:"ul"},"Change in GDPR consent."),(0,i.kt)("li",{parentName:"ul"},"User chooses to Opt-Out of sharing their records for advertising purposes or similar opt-out (\u201cOpt Out\u201d)."),(0,i.kt)("li",{parentName:"ul"},"If a user opts-in after previously Opting-Out."),(0,i.kt)("li",{parentName:"ul"},"User changes (adds, edits, deletes) their record(s).")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," Amazon Publisher Audiences documentation"),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tokenConfig")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/interfaces/apstag.ITokenConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"ITokenConfig")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"callback?")),(0,i.kt)("td",{parentName:"tr",align:"left"},"() => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"any")))}u.isMDXComponent=!0}}]);