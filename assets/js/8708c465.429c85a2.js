"use strict";(self.webpackChunkthe_publisher_ad_tag=self.webpackChunkthe_publisher_ad_tag||[]).push([[1137],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return c}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=o.createContext({}),s=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=s(e.components);return o.createElement(p.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),u=s(t),c=r,m=u["".concat(p,".").concat(c)]||u[c]||f[c]||l;return t?o.createElement(m,i(i({ref:n},d),{},{components:t})):o.createElement(m,i({ref:n},d))}));function c(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=u;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a.mdxType="string"==typeof e?e:r,i[1]=a;for(var s=2;s<l;s++)i[s]=t[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6049:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return d},default:function(){return u}});var o=t(7462),r=t(3366),l=(t(7294),t(3905)),i=["components"],a={id:"prebidjs.floors.IFloorEnforcementConfig",title:"Interface: IFloorEnforcementConfig",sidebar_label:"IFloorEnforcementConfig",custom_edit_url:null},p=void 0,s={unversionedId:"api/interfaces/prebidjs.floors.IFloorEnforcementConfig",id:"api/interfaces/prebidjs.floors.IFloorEnforcementConfig",isDocsHomePage:!1,title:"Interface: IFloorEnforcementConfig",description:"prebidjs.floors.IFloorEnforcementConfig",source:"@site/docs/api/interfaces/prebidjs.floors.IFloorEnforcementConfig.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/prebidjs.floors.IFloorEnforcementConfig",permalink:"/moli-ad-tag/docs/api/interfaces/prebidjs.floors.IFloorEnforcementConfig",editUrl:null,tags:[],version:"current",frontMatter:{id:"prebidjs.floors.IFloorEnforcementConfig",title:"Interface: IFloorEnforcementConfig",sidebar_label:"IFloorEnforcementConfig",custom_edit_url:null},sidebar:"API",previous:{title:"IFloorEndpoint",permalink:"/moli-ad-tag/docs/api/interfaces/prebidjs.floors.IFloorEndpoint"},next:{title:"IFloorSchema",permalink:"/moli-ad-tag/docs/api/interfaces/prebidjs.floors.IFloorSchema"}},d=[{value:"Properties",id:"properties",children:[{value:"auctionDelay",id:"auctiondelay",children:[]},{value:"bidAdjustment",id:"bidadjustment",children:[]},{value:"endpoint",id:"endpoint",children:[]},{value:"enforceJS",id:"enforcejs",children:[]},{value:"enforcePBS",id:"enforcepbs",children:[]},{value:"floorDeals",id:"floordeals",children:[]},{value:"floorMin",id:"floormin",children:[]}]}],f={toc:d};function u(e){var n=e.components,t=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,o.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../namespaces/prebidjs"},"prebidjs"),".",(0,l.kt)("a",{parentName:"p",href:"../namespaces/prebidjs.floors"},"floors"),".IFloorEnforcementConfig"),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"auctiondelay"},"auctionDelay"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,l.kt)("strong",{parentName:"p"},"auctionDelay"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"If an endpoint URL (a Dynamic Floor) is defined, the Price Floors Module will attempt to fetch floor data from\nthe Floor Provider\u2019s endpoint. When requestBids is called, the Price Floors Module will delay the auction up\nto the supplied amount of time in floors.auctionDelay or as soon as the dynamic endpoint returns data,\nwhichever is first"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"default"))," 0"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"bidadjustment"},"bidAdjustment"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,l.kt)("strong",{parentName:"p"},"bidAdjustment"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"If ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", the Price Floors Module will use the bidAdjustment function to adjust the floor per bidder.\nIf ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," (or no bidAdjustment function is provided), floors will not be adjusted. Note: Setting this\nparameter to false may have unexpected results, such as signaling a gross floor when expecting net or vice versa."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"default"))," true"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"endpoint"},"endpoint"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,l.kt)("strong",{parentName:"p"},"endpoint"),": ",(0,l.kt)("a",{parentName:"p",href:"prebidjs.floors.IFloorEndpoint"},(0,l.kt)("inlineCode",{parentName:"a"},"IFloorEndpoint"))),(0,l.kt)("p",null,"Controls behavior for dynamically retrieving floors."),(0,l.kt)("p",null,"Make sure to set an ",(0,l.kt)("inlineCode",{parentName:"p"},"auctionDelay")," if you use a floor price provider."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"enforcejs"},"enforceJS"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,l.kt)("strong",{parentName:"p"},"enforceJS"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"If set to ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", the Price Floors Module will provide floors to bid adapters for bid request matched rules and\nsuppress any bids not exceeding a matching floor. If set to ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),", the Price Floors Module will still provide\nfloors for bid adapters, there will be no floor enforcement."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"default"))," true"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"enforcepbs"},"enforcePBS"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,l.kt)("strong",{parentName:"p"},"enforcePBS"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"If set to ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", the Price Floors Module will signal to Prebid Server to pass floors to it\u2019s bid adapters and\nenforce floors. If set to ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),", the pbjs should still pass matched bid request floor data to PBS, however no\nenforcement will take place."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"default"))," false"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"floordeals"},"floorDeals"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,l.kt)("strong",{parentName:"p"},"floorDeals"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Enforce floors for deal bid requests."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"default"))," false"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"floormin"},"floorMin"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,l.kt)("strong",{parentName:"p"},"floorMin"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The mimimum CPM floor used by the Price Floors Module (as of 4.13). The Price Floors Module will take the\ngreater of floorMin and the matched rule CPM when evaluating getFloor() and enforcing floors."))}u.isMDXComponent=!0}}]);