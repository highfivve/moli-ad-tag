(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{215:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return l})),r.d(t,"toc",(function(){return c})),r.d(t,"default",(function(){return m}));var n=r(3),a=r(7),o=(r(0),r(333)),i={id:"moli.reporting",title:"Namespace: reporting",sidebar_label:"reporting",custom_edit_url:null,hide_title:!0},l={unversionedId:"api/modules/moli.reporting",id:"api/modules/moli.reporting",isDocsHomePage:!1,title:"Namespace: reporting",description:"Namespace: reporting",source:"@site/docs/api/modules/moli.reporting.md",slug:"/api/modules/moli.reporting",permalink:"/docs/api/modules/moli.reporting",editUrl:null,version:"current",sidebar_label:"reporting",sidebar:"API",previous:{title:"Namespace: pipeline",permalink:"/docs/api/modules/moli.pipeline"},next:{title:"Namespace: state",permalink:"/docs/api/modules/moli.state"}},c=[{value:"Reporting",id:"reporting",children:[]},{value:"Metrics",id:"metrics",children:[]},{value:"Integration",id:"integration",children:[]},{value:"Table of contents",id:"table-of-contents",children:[{value:"Interfaces",id:"interfaces",children:[]}]},{value:"Type aliases",id:"type-aliases",children:[{value:"Metric",id:"metric",children:[]},{value:"MetricType",id:"metrictype",children:[]},{value:"Reporter",id:"reporter",children:[]}]}],p={toc:c};function m(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"namespace-reporting"},"Namespace: reporting"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"/docs/api/modules/moli"},"Moli"),".reporting"),Object(o.b)("h2",{id:"reporting"},"Reporting"),Object(o.b)("p",null,"Moli provides extension points to add listeners for different metrics. These can\nbe used to measure performance and latency of your ad setup."),Object(o.b)("h2",{id:"metrics"},"Metrics"),Object(o.b)("p",null,"All metrics are based on the Web Performance API. If a browser doesn't support this\nAPI, no metrics will be collected."),Object(o.b)("p",null,"Moli provides the following metrics"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"dfpLoad"),"    - measurement from ",Object(o.b)("inlineCode",{parentName:"li"},"requestAds")," to ",Object(o.b)("inlineCode",{parentName:"li"},"finish")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"prebidLoad")," - measurement from ",Object(o.b)("inlineCode",{parentName:"li"},"requestBids")," to ",Object(o.b)("inlineCode",{parentName:"li"},"bidsBackHandler")," called"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"a9Load"),"     - measurement from ",Object(o.b)("inlineCode",{parentName:"li"},"fetchBids")," to ",Object(o.b)("inlineCode",{parentName:"li"},"bidsBackHandler")," called"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"ttfa"),"       - Time-To-First-Ad measurement from ",Object(o.b)("inlineCode",{parentName:"li"},"requestAds")," to the first ad slot render call"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"ttfr"),"       - Time-To-FIrst-Render measurement from ",Object(o.b)("inlineCode",{parentName:"li"},"requestAds")," to first ad slot fully rendered"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"adslot"),"     - Contains multiple metrics for a single ad slot. See ",Object(o.b)("inlineCode",{parentName:"li"},"AdSlotMetric")," for more details.")),Object(o.b)("h2",{id:"integration"},"Integration"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"example"))," A simple integration in the ad configuration object. To see the console reporter implementation\ntake a look ",Object(o.b)("a",{parentName:"p",href:"#reporter"},"the reporter type"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"reporting: {\n  // report everything\n  sampleRate: 1,\n  // a regex that splits the publisher id and `gf` from the ad unit path\n  adUnitRegex: /\\/\\d*\\/gf\\//i,\n  // an array of reporters\n  reporters: [\n    consoleLogReporter\n  ]\n}\n")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"see"))," ",Object(o.b)("a",{parentName:"p",href:"#reporter"},"The Reporter type contains implementation examples"),"."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"see"))," ",Object(o.b)("a",{parentName:"p",href:"https://developer.mozilla.org/de/docs/Web/API/Performance"},"https://developer.mozilla.org/de/docs/Web/API/Performance")),Object(o.b)("h2",{id:"table-of-contents"},"Table of contents"),Object(o.b)("h3",{id:"interfaces"},"Interfaces"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/docs/api/interfaces/moli.reporting.adslotmetric"},"AdSlotMetric")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/docs/api/interfaces/moli.reporting.adslotsmetric"},"AdSlotsMetric")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/docs/api/interfaces/moli.reporting.booleanmetric"},"BooleanMetric")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/docs/api/interfaces/moli.reporting.imetric"},"IMetric")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/docs/api/interfaces/moli.reporting.reportingconfig"},"ReportingConfig")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/docs/api/interfaces/moli.reporting.singlemeasurementmetric"},"SingleMeasurementMetric"))),Object(o.b)("h2",{id:"type-aliases"},"Type aliases"),Object(o.b)("h3",{id:"metric"},"Metric"),Object(o.b)("p",null,"\u01ac ",Object(o.b)("strong",{parentName:"p"},"Metric"),": ",Object(o.b)("a",{parentName:"p",href:"/docs/api/interfaces/moli.reporting.singlemeasurementmetric"},Object(o.b)("em",{parentName:"a"},"SingleMeasurementMetric"))," ","|"," ",Object(o.b)("a",{parentName:"p",href:"/docs/api/interfaces/moli.reporting.adslotmetric"},Object(o.b)("em",{parentName:"a"},"AdSlotMetric"))," ","|"," ",Object(o.b)("a",{parentName:"p",href:"/docs/api/interfaces/moli.reporting.adslotsmetric"},Object(o.b)("em",{parentName:"a"},"AdSlotsMetric"))," ","|"," ",Object(o.b)("a",{parentName:"p",href:"/docs/api/interfaces/moli.reporting.booleanmetric"},Object(o.b)("em",{parentName:"a"},"BooleanMetric"))),Object(o.b)("p",null,"Base type for all provided metrics."),Object(o.b)("hr",null),Object(o.b)("h3",{id:"metrictype"},"MetricType"),Object(o.b)("p",null,"\u01ac ",Object(o.b)("strong",{parentName:"p"},"MetricType"),": ",Object(o.b)("em",{parentName:"p"},"cmpLoad")," ","|"," ",Object(o.b)("em",{parentName:"p"},"dfpLoad")," ","|"," ",Object(o.b)("em",{parentName:"p"},"prebidLoad")," ","|"," ",Object(o.b)("em",{parentName:"p"},"a9Load")," ","|"," ",Object(o.b)("em",{parentName:"p"},"ttfa")," ","|"," ",Object(o.b)("em",{parentName:"p"},"ttfr")," ","|"," ",Object(o.b)("em",{parentName:"p"},"adSlot")," ","|"," ",Object(o.b)("em",{parentName:"p"},"adSlots")),Object(o.b)("p",null,"Union type for all provided metric types."),Object(o.b)("hr",null),Object(o.b)("h3",{id:"reporter"},"Reporter"),Object(o.b)("p",null,"\u01ac ",Object(o.b)("strong",{parentName:"p"},"Reporter"),": (",Object(o.b)("inlineCode",{parentName:"p"},"metric"),": ",Object(o.b)("a",{parentName:"p",href:"/docs/api/modules/moli.reporting#metric"},Object(o.b)("em",{parentName:"a"},"Metric")),") => ",Object(o.b)("em",{parentName:"p"},"void")),Object(o.b)("p",null,"A reporter is a simple function that receives a metric and handles it."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"example"))," A simple console log reporter that logs everything in grouped outputs."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"import { Moli } from 'moli-ad-tag/source/ts/types/moli';\nexport const consoleLogReporter: Moli.reporting.Reporter = (metric: Moli.reporting.Metric) => {\n\nswitch (metric.type) {\n   case 'dfpLoad': {\n     console.groupCollapsed('DFP Load Time');\n     console.log('startTime', Math.round(metric.measurement.startTime));\n     console.log('duration', metric.measurement.duration);\n     console.groupEnd();\n     break;\n   }\n   case 'prebidLoad': {\n     console.groupCollapsed('Prebid Load Time');\n     console.log('name', metric.measurement.name);\n     console.log('startTime', Math.round(metric.measurement.startTime));\n     console.log('duration', Math.round(metric.measurement.duration));\n     console.groupEnd();\n     break;\n   }\ncase 'a9Load': {\n     console.groupCollapsed('A9 Load Time');\n     console.log('name', metric.measurement.name);\n     console.log('startTime', Math.round(metric.measurement.startTime));\n     console.log('duration', Math.round(metric.measurement.duration));\n     console.groupEnd();\n     break;\n   }\n   case 'ttfa': {\n     console.groupCollapsed('Time to first Ad');\n     console.log('visible at', Math.round(metric.measurement.startTime + metric.measurement.duration));\n     console.log('startTime', Math.round(metric.measurement.startTime));\n     console.log('duration', Math.round(metric.measurement.duration));\n     console.groupEnd();\n     break;\n   }\n   case 'ttfr': {\n     console.groupCollapsed('Time to first Render');\n     console.log('rendered at', Math.round(metric.measurement.startTime + metric.measurement.duration));\n     console.log('startTime', Math.round(metric.measurement.startTime));\n     console.log('duration', Math.round(metric.measurement.duration));\n     console.groupEnd();\n     break;\n   }\n   case 'adSlots': {\n     console.groupCollapsed('AdSlot metrics');\n     console.log('number of slots', metric.numberAdSlots);\n     console.log('number of empty slots', metric.numberEmptyAdSlots);\n     console.groupEnd();\n     break;\n   }\n   case 'adSlot': {\n     console.groupCollapsed(`AdSlot: ${metric.adUnitName}`);\n     console.log('advertiser id', metric.advertiserId);\n     console.log('order id', metric.campaignId);\n     console.log('line item id', metric.lineItemId);\n     console.log('render start at', Math.round(metric.rendered.startTime));\n     console.log('rendering duration', Math.round(metric.rendering.duration));\n     console.log('loaded at', Math.round(metric.loaded.startTime + metric.loaded.duration));\n     console.groupEnd();\n     break;\n   }\n}\n")),Object(o.b)("h4",{id:"type-declaration"},"Type declaration:"),Object(o.b)("p",null,"\u25b8 (",Object(o.b)("inlineCode",{parentName:"p"},"metric"),": ",Object(o.b)("a",{parentName:"p",href:"/docs/api/modules/moli.reporting#metric"},Object(o.b)("em",{parentName:"a"},"Metric")),"): ",Object(o.b)("em",{parentName:"p"},"void")),Object(o.b)("h4",{id:"parameters"},"Parameters:"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:"left"},"Name"),Object(o.b)("th",{parentName:"tr",align:"left"},"Type"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("inlineCode",{parentName:"td"},"metric")),Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("a",{parentName:"td",href:"/docs/api/modules/moli.reporting#metric"},Object(o.b)("em",{parentName:"a"},"Metric")))))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Returns:")," ",Object(o.b)("em",{parentName:"p"},"void")))}m.isMDXComponent=!0},333:function(e,t,r){"use strict";r.d(t,"a",(function(){return s})),r.d(t,"b",(function(){return u}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=a.a.createContext({}),m=function(e){var t=a.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=m(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=m(r),d=n,u=s["".concat(i,".").concat(d)]||s[d]||b[d]||o;return r?a.a.createElement(u,l(l({ref:t},p),{},{components:r})):a.a.createElement(u,l({ref:t},p))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);