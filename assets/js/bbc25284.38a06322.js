"use strict";(self.webpackChunkthe_publisher_ad_tag=self.webpackChunkthe_publisher_ad_tag||[]).push([[8885],{9248:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var s=t(5893),n=t(1151);const o={},i="Type Alias: DataKeyValue",l={id:"api/types/moliConfig/namespaces/modules/namespaces/zeotap/type-aliases/DataKeyValue",title:"Type Alias: DataKeyValue",description:"DataKeyValue: object",source:"@site/docs/api/types/moliConfig/namespaces/modules/namespaces/zeotap/type-aliases/DataKeyValue.md",sourceDirName:"api/types/moliConfig/namespaces/modules/namespaces/zeotap/type-aliases",slug:"/api/types/moliConfig/namespaces/modules/namespaces/zeotap/type-aliases/DataKeyValue",permalink:"/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/zeotap/type-aliases/DataKeyValue",draft:!1,unlisted:!1,editUrl:"https://github.com/highfivve/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/zeotap/type-aliases/DataKeyValue.md",tags:[],version:"current",frontMatter:{},sidebar:"API",previous:{title:"Interface: ZeotapModuleConfig",permalink:"/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/zeotap/interfaces/ZeotapModuleConfig"},next:{title:"Type Alias: ExclusionKeyValue",permalink:"/moli-ad-tag/docs/api/types/moliConfig/namespaces/modules/namespaces/zeotap/type-aliases/ExclusionKeyValue"}},p={},c=[];function r(e){const a={blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.header,{children:(0,s.jsx)(a.h1,{id:"type-alias-datakeyvalue",children:"Type Alias: DataKeyValue"})}),"\n",(0,s.jsxs)(a.blockquote,{children:["\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"DataKeyValue"}),": ",(0,s.jsx)(a.code,{children:"object"})]}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:"Used to specify which keys to extract from moli's targeting (key/value pairs) and which key then to use in the\nZeotap request URL."}),"\n",(0,s.jsxs)(a.p,{children:["For example, if you want to transfer a key/value pair with the key ",(0,s.jsx)(a.code,{children:"xyz"})," to Zeotap under the name ",(0,s.jsx)(a.code,{children:"abc"}),", the\nrespective DataKeyValue object would be:"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-ts",children:"const transferXyz: DataKeyValue = {\n  keyValueKey: 'xyz',\n  parameterKey: 'abc'\n}\n```ts\n\n## Type declaration\n\n### keyValueKey\n\n> **keyValueKey**: `string`\n\n### parameterKey\n\n> **parameterKey**: `string`\n"})})]})}function u(e={}){const{wrapper:a}={...(0,n.a)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},1151:(e,a,t)=>{t.d(a,{Z:()=>l,a:()=>i});var s=t(7294);const n={},o=s.createContext(n);function i(e){const a=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(o.Provider,{value:a},e.children)}}}]);