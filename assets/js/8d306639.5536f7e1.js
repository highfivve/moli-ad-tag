"use strict";(self.webpackChunkthe_publisher_ad_tag=self.webpackChunkthe_publisher_ad_tag||[]).push([[8838],{6283:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"features/hooks","title":"Hooks","description":"Moli provides a hooks system that allows you to execute custom code at specific points in the ad loading lifecycle. Hooks are useful for setting up dynamic targeting, triggering events, or performing cleanup operations.","source":"@site/docs/features/hooks.md","sourceDirName":"features","slug":"/features/hooks","permalink":"/moli-ad-tag/docs/features/hooks","draft":false,"unlisted":false,"editUrl":"https://github.com/highfivve/moli-ad-tag/docs/features/hooks.md","tags":[],"version":"current","frontMatter":{"title":"Hooks"},"sidebar":"docs","previous":{"title":"Passback Bridge","permalink":"/moli-ad-tag/docs/features/passback"},"next":{"title":"Ad Unit Path Variables","permalink":"/moli-ad-tag/docs/features/ad-unit-path-variables"}}');var t=s(4848),a=s(8453);const o={title:"Hooks"},r=void 0,l={},d=[{value:"Overview",id:"overview",level:2},{value:"Available Hooks",id:"available-hooks",level:2},{value:"beforeRequestAds",id:"beforerequestads",level:3},{value:"afterRequestAds",id:"afterrequestads",level:3},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Setting Up Hooks",id:"setting-up-hooks",level:3},{value:"Hook Parameters",id:"hook-parameters",level:3},{value:"beforeRequestAds Parameters",id:"beforerequestads-parameters",level:4},{value:"afterRequestAds Parameters",id:"afterrequestads-parameters",level:4},{value:"Common Use Cases",id:"common-use-cases",level:2},{value:"Dynamic Targeting",id:"dynamic-targeting",level:3},{value:"Analytics Integration",id:"analytics-integration",level:3},{value:"Lazy Loading Triggers",id:"lazy-loading-triggers",level:3},{value:"Single Page Application Integration",id:"single-page-application-integration",level:3},{value:"Multiple Hooks",id:"multiple-hooks",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Hook Timing",id:"hook-timing",level:2},{value:"beforeRequestAds Timing",id:"beforerequestads-timing",level:3},{value:"afterRequestAds Timing",id:"afterrequestads-timing",level:3},{value:"State Values",id:"state-values",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Hook Registration",id:"hook-registration",level:3},{value:"Hook Functions",id:"hook-functions",level:3},{value:"Error Handling",id:"error-handling-1",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Available Methods",id:"available-methods",level:3},{value:"Hook Function Signatures",id:"hook-function-signatures",level:3},{value:"Configuration Notes",id:"configuration-notes",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Moli provides a hooks system that allows you to execute custom code at specific points in the ad loading lifecycle. Hooks are useful for setting up dynamic targeting, triggering events, or performing cleanup operations."}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"Hooks help you:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Execute code before ads are requested"}),"\n",(0,t.jsx)(n.li,{children:"Execute code after ads have been loaded"}),"\n",(0,t.jsx)(n.li,{children:"Set up dynamic targeting and labels"}),"\n",(0,t.jsx)(n.li,{children:"Trigger custom events"}),"\n",(0,t.jsx)(n.li,{children:"Perform cleanup operations"}),"\n",(0,t.jsx)(n.li,{children:"Integrate with analytics and tracking systems"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"available-hooks",children:"Available Hooks"}),"\n",(0,t.jsx)(n.h3,{id:"beforerequestads",children:"beforeRequestAds"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"beforeRequestAds"})," hook is called before the ad tag starts requesting ads. This is the perfect place to set up dynamic targeting, add labels, or perform any setup that needs to happen before ad requests."]}),"\n",(0,t.jsx)(n.h3,{id:"afterrequestads",children:"afterRequestAds"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"afterRequestAds"})," hook is called after the ad tag has finished requesting ads. This is useful for triggering events, analytics, or any post-ad-loading operations."]}),"\n",(0,t.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,t.jsx)(n.h3,{id:"setting-up-hooks",children:"Setting Up Hooks"}),"\n",(0,t.jsxs)(n.p,{children:["Hooks must be set up before calling ",(0,t.jsx)(n.code,{children:"configure()"})," or ",(0,t.jsx)(n.code,{children:"requestAds()"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"window.moli = window.moli || { que: [] };\nwindow.moli.que.push(function(moliAdTag) {\n  // Set up beforeRequestAds hook\n  moliAdTag.beforeRequestAds((config) => {\n    // This code runs before ads are requested\n    console.log('About to request ads with config:', config);\n  });\n\n  // Set up afterRequestAds hook\n  moliAdTag.afterRequestAds((state) => {\n    // This code runs after ads have been requested\n    console.log('Ads requested, state:', state);\n  });\n\n  // Configure and request ads\n  moliAdTag.requestAds();\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"hook-parameters",children:"Hook Parameters"}),"\n",(0,t.jsx)(n.h4,{id:"beforerequestads-parameters",children:"beforeRequestAds Parameters"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"moliAdTag.beforeRequestAds((config, runtimeConfig) => {\n  // config: The final MoliConfig that will be used for ad requests\n  // runtimeConfig: The current runtime configuration including labels, targeting, etc.\n});\n"})}),"\n",(0,t.jsx)(n.h4,{id:"afterrequestads-parameters",children:"afterRequestAds Parameters"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"moliAdTag.afterRequestAds((state) => {\n  // state: The final state after ad requests\n  // Possible values: 'finished', 'error', 'spa-finished'\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,t.jsx)(n.h3,{id:"dynamic-targeting",children:"Dynamic Targeting"}),"\n",(0,t.jsx)(n.p,{children:"Set up dynamic targeting before each ad request:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"moliAdTag.beforeRequestAds((config) => {\n  // Add page-specific targeting\n  moliAdTag.setTargeting('page_type', getPageType());\n  moliAdTag.setTargeting('user_segment', getUserSegment());\n  \n  // Add dynamic labels\n  moliAdTag.addLabel('premium-user');\n  moliAdTag.addLabel('mobile-device');\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"analytics-integration",children:"Analytics Integration"}),"\n",(0,t.jsx)(n.p,{children:"Trigger analytics events after ads are loaded:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"moliAdTag.afterRequestAds((state) => {\n  if (state === 'finished') {\n    // Track successful ad load\n    analytics.track('ads_loaded', {\n      timestamp: Date.now(),\n      adSlots: config.slots.length\n    });\n  } else if (state === 'error') {\n    // Track ad load errors\n    analytics.track('ads_error', {\n      timestamp: Date.now(),\n      error: 'ad_load_failed'\n    });\n  }\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"lazy-loading-triggers",children:"Lazy Loading Triggers"}),"\n",(0,t.jsx)(n.p,{children:"Set up lazy loading triggers after initial ads are loaded:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"moliAdTag.afterRequestAds((state) => {\n  if (state === 'finished') {\n    // Trigger lazy loading for additional ad slots\n    window.dispatchEvent(new Event('trigger-lazy-ads'));\n  }\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"single-page-application-integration",children:"Single Page Application Integration"}),"\n",(0,t.jsx)(n.p,{children:"In SPAs, hooks are called for each page navigation:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"moliAdTag.beforeRequestAds((config) => {\n  // Reset targeting for new page\n  moliAdTag.setTargeting('page_url', window.location.href);\n  moliAdTag.setTargeting('page_title', document.title);\n  \n  // Add page-specific labels\n  if (window.location.pathname.includes('/sports/')) {\n    moliAdTag.addLabel('sports-content');\n  }\n});\n\nmoliAdTag.afterRequestAds((state) => {\n  if (state === 'spa-finished') {\n    // Page navigation completed, trigger page view tracking\n    analytics.track('page_view', {\n      url: window.location.href,\n      title: document.title\n    });\n  }\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"multiple-hooks",children:"Multiple Hooks"}),"\n",(0,t.jsx)(n.p,{children:"You can register multiple hooks of the same type:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"// First beforeRequestAds hook\nmoliAdTag.beforeRequestAds((config) => {\n  moliAdTag.setTargeting('user_type', getUserType());\n});\n\n// Second beforeRequestAds hook\nmoliAdTag.beforeRequestAds((config) => {\n  moliAdTag.setTargeting('content_category', getContentCategory());\n});\n\n// First afterRequestAds hook\nmoliAdTag.afterRequestAds((state) => {\n  console.log('Ads loaded with state:', state);\n});\n\n// Second afterRequestAds hook\nmoliAdTag.afterRequestAds((state) => {\n  if (state === 'finished') {\n    analytics.track('ads_complete');\n  }\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsx)(n.p,{children:"Hooks have built-in error handling. If a hook throws an error, it won't prevent other hooks from executing:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"moliAdTag.beforeRequestAds((config) => {\n  // This error won't prevent other hooks from running\n  throw new Error('Something went wrong');\n});\n\nmoliAdTag.beforeRequestAds((config) => {\n  // This hook will still execute\n  console.log('This hook runs even if the previous one failed');\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"hook-timing",children:"Hook Timing"}),"\n",(0,t.jsx)(n.h3,{id:"beforerequestads-timing",children:"beforeRequestAds Timing"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Called after configuration is complete"}),"\n",(0,t.jsx)(n.li,{children:"Called before ad requests are made"}),"\n",(0,t.jsx)(n.li,{children:"DOM is ready at this point"}),"\n",(0,t.jsx)(n.li,{children:"Perfect for setting up targeting and labels"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"afterrequestads-timing",children:"afterRequestAds Timing"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Called after all ad requests are complete"}),"\n",(0,t.jsx)(n.li,{children:"Called regardless of success or failure"}),"\n",(0,t.jsx)(n.li,{children:"Useful for cleanup and analytics"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"state-values",children:"State Values"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"afterRequestAds"})," hook receives different state values:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"'finished'"})})," - All ads loaded successfully (non-SPA mode)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"'spa-finished'"})})," - All ads loaded successfully (SPA mode)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"'error'"})})," - An error occurred during ad loading"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsx)(n.h3,{id:"hook-registration",children:"Hook Registration"}),"\n",(0,t.jsx)(n.p,{children:"Register hooks early in your setup:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"// \u2705 Good - Register hooks before configuration\nwindow.moli.que.push(function(moliAdTag) {\n  moliAdTag.beforeRequestAds(setupTargeting);\n  moliAdTag.afterRequestAds(trackAnalytics);\n  moliAdTag.requestAds();\n});\n\n// \u274c Avoid - Register hooks after configuration\nwindow.moli.que.push(function(moliAdTag) {\n  moliAdTag.requestAds();\n  moliAdTag.beforeRequestAds(setupTargeting); // Too late!\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"hook-functions",children:"Hook Functions"}),"\n",(0,t.jsx)(n.p,{children:"Keep hook functions focused and lightweight:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"// \u2705 Good - Focused hook functions\nconst setupTargeting = (config) => {\n  moliAdTag.setTargeting('page_type', getPageType());\n};\n\nconst trackAnalytics = (state) => {\n  analytics.track('ads_complete', { state });\n};\n\n// \u274c Avoid - Complex logic in hooks\nconst complexHook = (config) => {\n  // Too much logic in one hook\n  const userData = fetchUserData();\n  const pageData = analyzePage();\n  const targeting = calculateTargeting(userData, pageData);\n  // ... many more operations\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"error-handling-1",children:"Error Handling"}),"\n",(0,t.jsx)(n.p,{children:"Handle errors gracefully in hooks:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"moliAdTag.beforeRequestAds((config) => {\n  try {\n    const userSegment = getUserSegment();\n    moliAdTag.setTargeting('user_segment', userSegment);\n  } catch (error) {\n    console.warn('Failed to set user segment:', error);\n    // Continue with default targeting\n  }\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,t.jsx)(n.h3,{id:"available-methods",children:"Available Methods"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"beforeRequestAds(callback)"})," - Register a hook to run before ad requests"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"afterRequestAds(callback)"})," - Register a hook to run after ad requests"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For detailed API documentation, see the ",(0,t.jsx)(n.a,{href:"/api/types/moliRuntime/namespaces/MoliRuntime/interfaces/MoliTag",children:"MoliTag API reference"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"hook-function-signatures",children:"Hook Function Signatures"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"// beforeRequestAds callback\ntype BeforeRequestAdsHook = (\n  config: MoliConfig,\n  runtimeConfig: MoliRuntimeConfig\n) => void;\n\n// afterRequestAds callback\ntype AfterRequestAdsHook = (\n  state: 'finished' | 'error' | 'spa-finished'\n) => void;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"configuration-notes",children:"Configuration Notes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Hooks must be registered before calling ",(0,t.jsx)(n.code,{children:"configure()"})," or ",(0,t.jsx)(n.code,{children:"requestAds()"})]}),"\n",(0,t.jsx)(n.li,{children:"Multiple hooks of the same type are supported"}),"\n",(0,t.jsx)(n.li,{children:"Hooks are called in the order they were registered"}),"\n",(0,t.jsx)(n.li,{children:"Errors in hooks don't prevent other hooks from executing"}),"\n",(0,t.jsx)(n.li,{children:"In SPA mode, hooks are called for each page navigation"}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var i=s(6540);const t={},a=i.createContext(t);function o(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);