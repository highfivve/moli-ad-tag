"use strict";(self.webpackChunkthe_publisher_ad_tag=self.webpackChunkthe_publisher_ad_tag||[]).push([[7296],{6518:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"features/passback","title":"Passback Bridge","description":"The passback bridge enables communication between ad creatives and the Moli ad tag through the postMessage API. This feature allows third-party creatives to trigger ad slot refreshes or indicate passback scenarios when they cannot serve ads.","source":"@site/docs/features/passback.md","sourceDirName":"features","slug":"/features/passback","permalink":"/moli-ad-tag/docs/features/passback","draft":false,"unlisted":false,"editUrl":"https://github.com/highfivve/moli-ad-tag/docs/features/passback.md","tags":[],"version":"current","frontMatter":{"title":"Passback Bridge"},"sidebar":"docs","previous":{"title":"Environments","permalink":"/moli-ad-tag/docs/features/environments"},"next":{"title":"Hooks","permalink":"/moli-ad-tag/docs/features/hooks"}}');var a=s(4848),r=s(8453);const t={title:"Passback Bridge"},l=void 0,c={},d=[{value:"Overview",id:"overview",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Message Protocol",id:"message-protocol",level:2},{value:"1. Refresh Ad Unit Message",id:"1-refresh-ad-unit-message",level:3},{value:"2. Passback Message",id:"2-passback-message",level:3},{value:"Implementation Examples",id:"implementation-examples",level:2},{value:"Basic Creative Integration",id:"basic-creative-integration",level:3},{value:"Advanced Creative with Ad Unit Path",id:"advanced-creative-with-ad-unit-path",level:3},{value:"Backfill Integration",id:"backfill-integration",level:3},{value:"Use Cases",id:"use-cases",level:2},{value:"1. Backfill Integration",id:"1-backfill-integration",level:3},{value:"2. Cross-Ad Server Communication",id:"2-cross-ad-server-communication",level:3},{value:"Targeting Parameters",id:"targeting-parameters",level:2},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Origin Validation",id:"origin-validation",level:3},{value:"Message Validation",id:"message-validation",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Use Ad Unit Path When Possible",id:"1-use-ad-unit-path-when-possible",level:3},{value:"2. Implement Fallback Logic",id:"2-implement-fallback-logic",level:3},{value:"3. Monitor Passback Performance",id:"3-monitor-passback-performance",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debug Mode",id:"debug-mode",level:3},{value:"Integration Checklist",id:"integration-checklist",level:2}];function o(e){const n={code:"code",h2:"h2",h3:"h3",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["The passback bridge enables communication between ad creatives and the Moli ad tag through the ",(0,a.jsx)(n.code,{children:"postMessage"})," API. This feature allows third-party creatives to trigger ad slot refreshes or indicate passback scenarios when they cannot serve ads."]}),"\n",(0,a.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(n.p,{children:"The passback bridge is a communication protocol that enables:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Backfill Integration"}),": When a direct integration doesn't fill, creatives can trigger backfill ad slots"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Cross-Ad Server Communication"}),": Calling into Google Ad Manager from another ad server when there's no demand"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Creative-to-Ad Tag Communication"}),": Secure communication between iframe creatives and the parent page"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,a.jsx)(n.p,{children:"Enable the passback bridge in your Moli configuration:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const moliConfig = {\n  // ... other configuration\n  bridge: {\n    enabled: true\n  }\n};\n"})}),"\n",(0,a.jsx)(n.h2,{id:"message-protocol",children:"Message Protocol"}),"\n",(0,a.jsx)(n.p,{children:"The bridge supports two types of messages:"}),"\n",(0,a.jsx)(n.h3,{id:"1-refresh-ad-unit-message",children:"1. Refresh Ad Unit Message"}),"\n",(0,a.jsx)(n.p,{children:"Triggers a backfill ad slot refresh:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"{\n  event: 'h5.adunit.refresh',\n  domId: 'banner-top'\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"event"}),": Must be ",(0,a.jsx)(n.code,{children:"'h5.adunit.refresh'"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"domId"}),": The DOM ID of the ad slot to refresh"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"2-passback-message",children:"2. Passback Message"}),"\n",(0,a.jsx)(n.p,{children:"Indicates a passback scenario and adds targeting parameters:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"{\n  event: 'h5.adunit.passback',\n  domId: 'banner-top',\n  adUnitPath: '/123,456/banner-top',\n  passbackOrigin: 'AdvertiserName'\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"event"}),": Must be ",(0,a.jsx)(n.code,{children:"'h5.adunit.passback'"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"domId"}),": The DOM ID of the ad slot (fallback if ",(0,a.jsx)(n.code,{children:"adUnitPath"})," not provided)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"adUnitPath"}),": The ad unit path (preferred method)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"passbackOrigin"}),": Name of the advertiser triggering the passback"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"implementation-examples",children:"Implementation Examples"}),"\n",(0,a.jsx)(n.h3,{id:"basic-creative-integration",children:"Basic Creative Integration"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:"<script>\n// Simple passback trigger\nfunction triggerPassback() {\n  const message = {\n    event: 'h5.adunit.passback',\n    domId: 'banner-top',\n    passbackOrigin: 'ExampleAdvertiser'\n  };\n  \n  try {\n    // Try to post to top window first\n    window.top.postMessage(message, '*');\n  } catch (_) {\n    // Fallback to current window\n    window.postMessage(message, '*');\n  }\n}\n\n// Trigger passback when no ad is available\nif (!hasAdToShow) {\n  triggerPassback();\n}\n<\/script>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"advanced-creative-with-ad-unit-path",children:"Advanced Creative with Ad Unit Path"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:"<script>\nfunction triggerPassbackWithAdUnitPath() {\n  const message = {\n    event: 'h5.adunit.passback',\n    adUnitPath: '%%ADUNIT%%', // GAM macro\n    passbackOrigin: 'PremiumAdvertiser'\n  };\n  \n  const request = JSON.stringify(message);\n  \n  try {\n    window.top.postMessage(request, '*');\n  } catch (_) {\n    window.postMessage(request, '*');\n  }\n}\n<\/script>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"backfill-integration",children:"Backfill Integration"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:"<script>\nfunction triggerBackfill() {\n  const message = {\n    event: 'h5.adunit.refresh',\n    domId: 'backfill-slot'\n  };\n  \n  window.top.postMessage(message, '*');\n}\n\n// Trigger backfill when direct integration fails\nif (directAdFailed) {\n  triggerBackfill();\n}\n<\/script>\n"})}),"\n",(0,a.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,a.jsx)(n.h3,{id:"1-backfill-integration",children:"1. Backfill Integration"}),"\n",(0,a.jsx)(n.p,{children:"When a direct ad integration doesn't fill, creatives can trigger backfill ad slots:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// Creative detects no fill\nif (!adResponse || adResponse.isEmpty()) {\n  const backfillMessage = {\n    event: 'h5.adunit.refresh',\n    domId: 'backfill-banner'\n  };\n  \n  window.top.postMessage(backfillMessage, '*');\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Requirements:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["The target ad slot must have ",(0,a.jsx)(n.code,{children:"loaded: 'backfill'"})," behavior"]}),"\n",(0,a.jsx)(n.li,{children:"The creative must have permission to communicate with the parent page"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"2-cross-ad-server-communication",children:"2. Cross-Ad Server Communication"}),"\n",(0,a.jsx)(n.p,{children:"Enable communication between different ad servers when there's no demand:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// Ad server A has no demand, trigger Ad server B\nconst passbackMessage = {\n  event: 'h5.adunit.passback',\n  adUnitPath: '/123,456/content-banner',\n  passbackOrigin: 'AdServerA'\n};\n\nwindow.top.postMessage(passbackMessage, '*');\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Benefits:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Maintains existing targeting parameters"}),"\n",(0,a.jsxs)(n.li,{children:["Adds ",(0,a.jsx)(n.code,{children:"passback: true"})," and ",(0,a.jsx)(n.code,{children:"passbackOrigin"})," targeting"]}),"\n",(0,a.jsx)(n.li,{children:"Triggers a new ad request with updated parameters"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"targeting-parameters",children:"Targeting Parameters"}),"\n",(0,a.jsx)(n.p,{children:"When a passback message is processed, the following targeting parameters are automatically added:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"passback: true"})," - Indicates this is a passback request"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"passbackOrigin: [advertiser-name]"})," - The origin of the passback"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"These parameters are preserved in subsequent ad requests, allowing for:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Different line item targeting for passback scenarios"}),"\n",(0,a.jsx)(n.li,{children:"Analytics and reporting on passback performance"}),"\n",(0,a.jsx)(n.li,{children:"Custom logic based on passback origin"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,a.jsx)(n.h3,{id:"origin-validation",children:"Origin Validation"}),"\n",(0,a.jsxs)(n.p,{children:["The bridge accepts messages from any origin (",(0,a.jsx)(n.code,{children:"'*'"}),"). For production environments, consider:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// More secure implementation\nfunction sendSecureMessage(message, allowedOrigin) {\n  if (window.top.origin === allowedOrigin) {\n    window.top.postMessage(message, allowedOrigin);\n  }\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"message-validation",children:"Message Validation"}),"\n",(0,a.jsx)(n.p,{children:"The bridge validates all incoming messages:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Checks for required event types"}),"\n",(0,a.jsx)(n.li,{children:"Validates message structure"}),"\n",(0,a.jsx)(n.li,{children:"Handles JSON parsing errors gracefully"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,a.jsx)(n.p,{children:"The bridge includes robust error handling:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// Creative-side error handling\nfunction safePostMessage(message) {\n  try {\n    const serialized = JSON.stringify(message);\n    window.top.postMessage(serialized, '*');\n  } catch (error) {\n    console.warn('Failed to send passback message:', error);\n    // Fallback behavior\n  }\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,a.jsx)(n.h3,{id:"1-use-ad-unit-path-when-possible",children:"1. Use Ad Unit Path When Possible"}),"\n",(0,a.jsxs)(n.p,{children:["Prefer ",(0,a.jsx)(n.code,{children:"adUnitPath"})," over ",(0,a.jsx)(n.code,{children:"domId"})," for better compatibility:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// \u2705 Preferred\n{\n  event: 'h5.adunit.passback',\n  adUnitPath: '/123,456/banner-top',\n  passbackOrigin: 'Advertiser'\n}\n\n// \u26a0\ufe0f Fallback\n{\n  event: 'h5.adunit.passback',\n  domId: 'banner-top',\n  passbackOrigin: 'Advertiser'\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"2-implement-fallback-logic",children:"2. Implement Fallback Logic"}),"\n",(0,a.jsx)(n.p,{children:"Always include fallback mechanisms:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"function triggerPassback() {\n  const message = {\n    event: 'h5.adunit.passback',\n    domId: 'banner-top',\n    passbackOrigin: 'Advertiser'\n  };\n  \n  try {\n    window.top.postMessage(message, '*');\n  } catch (_) {\n    // Fallback for same-origin scenarios\n    window.postMessage(message, '*');\n  }\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"3-monitor-passback-performance",children:"3. Monitor Passback Performance"}),"\n",(0,a.jsx)(n.p,{children:"Track passback scenarios for optimization:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// Add analytics tracking\nfunction trackPassback(origin) {\n  if (typeof gtag !== 'undefined') {\n    gtag('event', 'passback_triggered', {\n      'passback_origin': origin,\n      'ad_slot': 'banner-top'\n    });\n  }\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,a.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Message Not Received"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Check if bridge is enabled in configuration"}),"\n",(0,a.jsx)(n.li,{children:"Verify message format and event type"}),"\n",(0,a.jsx)(n.li,{children:"Ensure creative has permission to post messages"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Ad Slot Not Found"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Verify ",(0,a.jsx)(n.code,{children:"domId"})," or ",(0,a.jsx)(n.code,{children:"adUnitPath"})," matches configured slots"]}),"\n",(0,a.jsx)(n.li,{children:"Check that target slot exists and is properly configured"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Backfill Not Triggering"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Ensure target slot has ",(0,a.jsx)(n.code,{children:"loaded: 'backfill'"})," behavior"]}),"\n",(0,a.jsx)(n.li,{children:"Verify slot is properly configured for backfill scenarios"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"debug-mode",children:"Debug Mode"}),"\n",(0,a.jsx)(n.p,{children:"Enable debug logging to troubleshoot issues:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:'// Check browser console for bridge messages\n// Look for: "bridge: add message listener"\n// Look for: "passback: Process passback for ad slot [path]"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"integration-checklist",children:"Integration Checklist"}),"\n",(0,a.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Enable bridge in Moli configuration"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure backfill ad slots with ",(0,a.jsx)(n.code,{children:"loaded: 'backfill'"})]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement passback logic in creatives"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Test message communication"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Verify targeting parameters are set correctly"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Monitor passback performance and analytics"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var i=s(6540);const a={},r=i.createContext(a);function t(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);