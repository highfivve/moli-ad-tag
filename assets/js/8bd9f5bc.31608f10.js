(self.webpackChunkthe_publisher_ad_tag=self.webpackChunkthe_publisher_ad_tag||[]).push([[3526],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),l=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=l(e.components);return a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),c=l(n),m=r,k=c["".concat(d,".").concat(m)]||c[m]||u[m]||i;return n?a.createElement(k,o(o({ref:t},s),{},{components:n})):a.createElement(k,o({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=c;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1216:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return l},default:function(){return u}});var a=n(2122),r=n(9756),i=(n(7294),n(3905)),o={id:"prebidjs.iadunit",title:"Interface: IAdUnit",sidebar_label:"IAdUnit",custom_edit_url:null},p=void 0,d={unversionedId:"api/interfaces/prebidjs.iadunit",id:"api/interfaces/prebidjs.iadunit",isDocsHomePage:!1,title:"Interface: IAdUnit",description:"prebidjs.IAdUnit",source:"@site/docs/api/interfaces/prebidjs.iadunit.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/prebidjs.iadunit",permalink:"/docs/api/interfaces/prebidjs.iadunit",editUrl:null,version:"current",frontMatter:{id:"prebidjs.iadunit",title:"Interface: IAdUnit",sidebar_label:"IAdUnit",custom_edit_url:null},sidebar:"API",previous:{title:"IAdServerTargeting",permalink:"/docs/api/interfaces/prebidjs.iadservertargeting"},next:{title:"IAdUpBid",permalink:"/docs/api/interfaces/prebidjs.iadupbid"}},l=[{value:"Ad unit / ad unit object",id:"ad-unit--ad-unit-object",children:[]},{value:"Properties",id:"properties",children:[{value:"bids",id:"bids",children:[]},{value:"code",id:"code",children:[]},{value:"mediaTypes",id:"mediatypes",children:[]},{value:"ortb2Imp",id:"ortb2imp",children:[]},{value:"pubstack",id:"pubstack",children:[]},{value:"renderer",id:"renderer",children:[]}]}],s={toc:l};function u(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/modules/prebidjs"},"prebidjs"),".IAdUnit"),(0,i.kt)("h2",{id:"ad-unit--ad-unit-object"},"Ad unit / ad unit object"),(0,i.kt)("p",null,"The ad unit object is where you configure what kinds of ads you will show in a given ad slot on your page, including:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Allowed sizes"),(0,i.kt)("li",{parentName:"ul"},"Allowed media types (e.g., banner, native, and/or video)")),(0,i.kt)("p",null,"It's also where you will configure bidders, e.g.:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Which bidders are allowed to bid for that ad slot"),(0,i.kt)("li",{parentName:"ul"},"What information is passed to those bidders via their parameters")),(0,i.kt)("p",null,"Relates directly to the ",(0,i.kt)("inlineCode",{parentName:"p"},"Moli.IAdSlot"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," ",(0,i.kt)("a",{parentName:"p",href:"https://prebid.org/dev-docs/adunit-reference.html"},"https://prebid.org/dev-docs/adunit-reference.html")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"bids"},"bids"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"bids"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/modules/prebidjs#ibid"},(0,i.kt)("inlineCode",{parentName:"a"},"IBid")),"[]"),(0,i.kt)("p",null,"An array of bid objects."),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"code"},"code"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"code"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"A unique identifier that you create and assign to this ad unit. This identifier will be used to set\nquery string targeting on the ad. If you're using GPT, we recommend setting this to the slot element ID."),(0,i.kt)("p",null,"Moli allows to omit the ",(0,i.kt)("inlineCode",{parentName:"p"},"code")," and will use the ",(0,i.kt)("inlineCode",{parentName:"p"},"domId")," of the slot"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"mediatypes"},"mediaTypes"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"mediaTypes"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/prebidjs.imediatypes"},(0,i.kt)("inlineCode",{parentName:"a"},"IMediaTypes"))),(0,i.kt)("p",null,'Defines one or multiple media types the ad unit supports.\nMedia Types can be "banner", "native" or "video'),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"ortb2imp"},"ortb2Imp"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"ortb2Imp"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/prebidjs.iortb2imp"},(0,i.kt)("inlineCode",{parentName:"a"},"IOrtb2Imp"))),(0,i.kt)("p",null,"Configure additional information per ad unit that should be send along\nwith a prebid server auction call."),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"pubstack"},"pubstack"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"pubstack"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("p",null,"This is an optional configuration for publishers that have a pubstack.io integration."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," ",(0,i.kt)("a",{parentName:"p",href:"https://pubstack.io/"},"https://pubstack.io/")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," ",(0,i.kt)("a",{parentName:"p",href:"https://pubstack.freshdesk.com/support/solutions/articles/48000965600-how-to-implement-google-adx-"},"https://pubstack.freshdesk.com/support/solutions/articles/48000965600-how-to-implement-google-adx-")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," ",(0,i.kt)("a",{parentName:"p",href:"https://pubstack.freshdesk.com/support/solutions/articles/48000965702-how-to-custom-ad-unit-name-"},"https://pubstack.freshdesk.com/support/solutions/articles/48000965702-how-to-custom-ad-unit-name-")),(0,i.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"adUnitName?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"By default, the integration uses the adUnitCode defined in the Ad Unit. If you want Pubstack to use another name, you just have to provide the desired value through the ",(0,i.kt)("inlineCode",{parentName:"td"},"pubstack.adUnitName")," property.  This feature is very useful when a site implements a lazy-loading or a refresh strategy. The following example shows you how to set a custom name, whatever the ad unit code is.   ",(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," ",(0,i.kt)("a",{parentName:"td",href:"https://pubstack.freshdesk.com/support/solutions/articles/48000965702-how-to-custom-ad-unit-name-"},"https://pubstack.freshdesk.com/support/solutions/articles/48000965702-how-to-custom-ad-unit-name-"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"adUnitPath?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},'This is required for Google Ad Manager integration.  Within the Prebid configuration (client-side), every prebid adUnit must be matched with a GAM adUnit, so that we can display the corresponding AdX revenue in Pubstack. In order to do that, you need to add the field "pubstack"."adUnitPath" to all ad units. This adUnitPath must be constructed* as such:    ',(0,i.kt)("inlineCode",{parentName:"td"},"/networkId/top_level1/level2/level3")," (same as the DFP adUnitPath)   ",(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," ",(0,i.kt)("a",{parentName:"td",href:"https://pubstack.freshdesk.com/support/solutions/articles/48000965600-how-to-implement-google-adx-"},"https://pubstack.freshdesk.com/support/solutions/articles/48000965600-how-to-implement-google-adx-"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tags?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Allows the publisher to push arbitrary dimensions to pubstack. Can only be used with coordination of pubstack so the data can actually be used.")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"renderer"},"renderer"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"renderer"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/prebidjs.irenderer"},(0,i.kt)("inlineCode",{parentName:"a"},"IRenderer"))),(0,i.kt)("p",null,"The renderer associated to the ad-unit. Only for mediaType = video."))}u.isMDXComponent=!0}}]);