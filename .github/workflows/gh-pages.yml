name: Github Pages Deployment

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Get release version from tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      # Setup node
      - name: Node setup
        uses: actions/setup-node@v4
        with:
          cache: 'npm'
          cache-dependency-path: 'website/package-lock.json'
          node-version: 18

      ## type declarations need to be present for docs to work properly
      - name: setup project
        run: |
          npm run setup
          npm run build

      # Build website
      - name: build website
        working-directory: ./website
        run: |
          npm ci
          npm run build

      - name: create versioned asset directories
        run: |
          mkdir -p website/build/assets/js/${{ env.RELEASE_VERSION }}
          mkdir -p website/build/assets/schema/${{ env.RELEASE_VERSION }}

      # Build prebuilt ad-tag
      - name: build adtag
        run: |
          npx ts-node bundle.ts --output website/build/assets/bundle/adtag.mjs --config bundles/all.json --failAfterWarnings false
          npx ts-node bundle.ts --output website/build/assets/bundle/${{ env.RELEASE_VERSION }}/adtag.mjs --config bundles/all.json --failAfterWarnings false

      # Build ad tag console
      - name: build ad tag console / debugger
        run: |
          npm ci
          npm run build:console
          cp dist/console.js ../website/build/assets/bundle/${{ env.RELEASE_VERSION }}/console.js
          cp dist/console.mjs ../website/build/assets/bundle/${{ env.RELEASE_VERSION }}/console.mjs

      # Copy schema files
      - name: copy schema files
        run: |
          cp schema.json website/build/assets/schema/${{ env.RELEASE_VERSION }}/schema.json

      # Deploy website
      - name: Deploy
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: gh-pages
          FOLDER: website/build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # this overrides the default clearing behaviour (entire target directory, FOLDER) and allows to keep some files
          # mainly the moli debugger and prebuilt bundles
          CLEAR_GLOBS_FILE: |
            'website/build/**/*'
            '!.git'
            '!website/build/assets/bundle/**/*'
