name: Github Pages Deployment

on:
  pull_request:
    branches: [ master ]
  push:
    tags:
      - 'v*'

jobs:
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Get release version from tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      # Yarn cache
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # Setup node
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      ## type declarations need to be present for docs to work properly
      - name: setup project
        run: yarn setup

      # Build website
      - name: build website
        working-directory: ./website
        run: |
          yarn install
          yarn build

      - name: create versioned asset directory
        run: |
          mkdir -p website/build/assets/js/${{ env.RELEASE_VERSION }}

      # Build prebuilt ad-tag
      - name: build adtag
        working-directory: ./prebuilt/ad-tag
        run: |
          yarn install
          yarn build
          cp dist/* ../../website/build/assets/js/
          cp dist/* ../../website/build/assets/js/${{ env.RELEASE_VERSION }}/

      # Build ad tag console
      - name: build ad tag console / debugger
        working-directory: ./moli-debugger
        run: |
          yarn install
          yarn build
          cp lib/* ../website/build/assets/js/
          cp dist/* ../website/build/assets/js/${{ env.RELEASE_VERSION }}/

      # Deploy website
      - name: Deploy
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: gh-pages
          FOLDER: website/build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
